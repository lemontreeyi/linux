{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./app/common/constants.js","webpack:///./app/common/utilities.ts","webpack:///./app/diagnostics/index.js","webpack:///./app/diagnostics/telemetry.service.js","webpack:///./app/diagnostics/ariaTelemetry.service.js","webpack:///./app/common/browserHandler.ts","webpack:///./app/user/index.js","webpack:///./app/user/protectedResourceInterceptor.js","webpack:///./app/user/msaUser.service.js","webpack:///./app/user/o365User.service.js","webpack:///./app/user/msidUser.service.js","webpack:///./app/user/user.service.js","webpack:///./app/mru/mru.service.js","webpack:///./app/mru/mru.controller.js","webpack:///./app/mru/index.js","webpack:///./app/popup/index.js","webpack:///./app/popup/popup.controller.js","webpack:///./app/experimentation/index.js","webpack:///./app/experimentation/experimentConstants.js","webpack:///./app/experimentation/experiment.service.js","webpack:///./app/experimentation/sharing/sharing.controller.js","webpack:///./app/experimentation/sharing/sharing.service.js","webpack:///./app/experimentation/sharing/sharingA/sharingA.controller.js","webpack:///./app/app.js","webpack:///./app/common/httpInterceptor.js","webpack:///./app/common/logDecorator.js","webpack:///./app/common/storage.service.js","webpack:///./app/common/index.js","webpack:///./app/common/notification.service.js","webpack:///./third_party/angularjs-localizationservice.1.0.1/localize.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","IDTYPE","MSACID","ORGIDPUID","ACTIVITY","AUTHENTICATION","NAME","AUTHORIZATION","NOTIFICATION","TELEMETRY","USERINFO_AVAILABLE","SSO","LOGOUT","REQUEST_TOKEN","LOG","APPINFO_NAME","FILE","APPLICATION_IMAGE_PATH","APPLICATION_LABEL","ERROR","MAX_SIZE_BYTE_LIMIT","OFFICE_APP_FILE_ASSOCIATIONS","EXCEL","ONENOTE","POWERPOINT","WORD","OFFICE_MIME_TYPES","ORIGIN","HTML5","LOCAL_PATH","SUPPORTED_APPLICATIONS","SUPPORTED_FILE_TYPES","JQUERY","EVENT_ID","KEYPRESS","ENTER","ARROWLEFT","ARROWUP","ARROWRIGHT","ARROWDOWN","MOUSEDOWN","LEFT_BUTTON_CLICK","LINKS","OFFICE_URL","PROGRESSPAGE_URL","SETTINGS_URL","SIGNUP","UNINSTALL","OFFICE_HOME_URL","OFFICE_HOME_DEV_URL","SUPPORT_URL","SUPPORT_URL_EDITOR","MYACCOUNT_MSA_URL","MYACCOUNT_O365_URL","APP","arguments","SWAY","SWAY_DEFAULT","ONEDRIVE","TEAMS","SHAREPOINT_DEFAULT","OUTLOOK_DEFAULT","OUTLOOK_O365","MENU_VIEWMODE","NONE","NEW","OPEN","ACCOUNT","SETTINGS","OAUTH","ACCESS_TOKEN","AUTH_CODE","CODE","EXPIRES_ON","REFRESH_TOKEN","SERVICE_ENDPOINT","SERVICE_ID","O365CONFIG","CLIENT_ID","CLIENT_SECRET","GRAPH_RESOURCE","ENDPOINTS","INSTANCE","LOGOUT_URI","MRU_URL","PHOTO_URL","ONEDRIVE_URL","SHAREPOINT_URL","REDIRECT_URI","UPLOAD_URL","FEDERATED_URL","MSACONFIG","ONEDRIVE_ITEMS_URL","SCOPE","URL","USERINFO_URL","FILEACCESS","id","priority","type","message","FILE_MAX_SIZE_BYTE_LIMIT_REACHED","FILE_UPLOAD_FAILURE_GENERIC","FILE_UPLOAD_FAILURE_SERVER","FILE_UPLOAD_FAILURE_UNSUPPORTED_MEDIA","FILE_UPLOAD_IN_PROGRESS","SETDEFAULT","AUTOSAVE","buttons","title","AUTOSAVETOONEDRIVE","AUTOSAVETOSHAREPOINT","NOTSIGNEDIN","UNSUPPORTEDFILETYPE","INVALIDSUBSCRIPTION","WEBDOCREDIRECT","DISPLAY_URL","QUERY_OPTION","RECENTS","LIST_LENGTH_MSA","LIST_LENGTH_O365","FILTER","ONEDRIVE_ENDPOINT","DISPLAY_PANEL","LIST","LOADING","NO_DOCS","CANCELLED","GENERIC","NO_DOCS_FOUND","UNSUPPORTED_USER_TYPE","SIGNINSTATUS","UNKNOWN","HASREFRESHTOKEN","SIGNEDIN","COMMAND","SET_DISABLED","TRACK_TRACE","TRACK_EVENT","ENABLED_SETTING_STORAGE_KEY","EVENT_PREFIX","PII_TYPE","IDENTITY","USER_TYPE","MSA","O365","USER_SERVICE_TYPE","MSID","TIMEOUT","DEFAULT_REQUEST","USER_INFO_LOOKUP","USER_INFO_LOOKUP_TEST","COPY_PASTE","TEST","testCommand","PASTE","pasteCommand","GET_CLIPBOARD_DATA","getClipboardDataCommand","GET_AVAILABLE_COMMANDS","getAvailableCommandsCommand","ERROR_RETRIES","HTTP_REQUEST","BROWSER_ICON","DEFAULT","INACTIVE","MESSAGE_CHANNEL","RESPONSE_STATUS_SUCCESS","RESPONSE_STATUS_FAIL","RESPONSE_CODE_NO_SUPPORT","RESPONSE_CODE_INVALID","Utilities","deserializeQuery","query","match","pl","search","decode","decodeURIComponent","replace","obj","exec","getFileExtension","fileName","docExt","splitDoc","toLowerCase","navigateToUrlWithNewTab","url","openActive","tabs","active","this","isUndefinedOrNull","isNotUndefinedOrNull","isExtensionInTestingMode","jasmine","isExtensionInDevelopmentMode","browser","extension","runtime","getURL","test","chrome","manifest","getManifest","undefined","update_url","isEditorEnabled","background","scripts","includes","shouldShowEditorMaterial","version_name","indexOf","getAppDescription","description","isBackgroundContext","loc","location","href","getBackgroundPage","getCurrentTime","Math","round","Date","getTime","isChrome","nav","navigator","isOpera","userAgent","isIEedge","vendor","getBrowserName","isRTL","uiLang","i18n","getUILanguage","setIcon","iconPath","browserAction","path","a","service","$injector","ariaTelemetry","telemetryProviders","addCustomProperties","async","properties","userService","pii","appVersion","version","language","constants","userType","getUserType","semanticContext","getSemanticContext","setUserId","userInfo","getUserInfo","cid","features","experimentFeatures","puid","tid","getEnabledSettingFromStorage","$q","storage","deferred","defer","then","resolve","settings","settingName","storedSetting","JSON","parse","readSettingValueOrUndefined","telemetry_enabled","promise","getEnabledSetting","setEnabledSetting","enabled","set","stringify","lastUpdate","now","manualOverride","setEnabledSettingInStorage","sendMessage","activity","command","trackEvent","eventName","measurements","isUndefined","isString","propertiesToTrack","extend","trackTrace","$window","addEventProperties","eventProperties","setProperty","enabledSetting","setName","ariaLogger","logEvent","browserListeners","propertyList","browserHandler","edgeBrowser","notifications","clear","notificationId","callback","options","alert","onButtonClicked","addListener","onClicked","getPlatformInfo","mergeProperties","target","source","entries","Array","isArray","concat","console","log","mock","icon","getMessage","onMessage","listener","removeListener","local","remove","createProperties","BrowserHandler","config","$httpProvider","$provide","interceptors","factory","$log","request","headers","error","resource","acquireToken","token","warn","Authorization","responseError","response","status","reject","clearToken","getConfig","lookupUserInfo","Promise","oneDriveUrl","$http","method","email","emails","account","getResourceForEndpoint","endpoint","notification","configEndpoint","tokenData","idToken","user","parsedJson","encodedIdToken","decodedToken","jwtToken","matches","header","JWSPayload","JWSSig","decodeJwt","base64Decoded","base64IdToken","atob","escape","base64DecodeStringUrlSafe","_logstatus","err","stack","extractIdToken","aud","upn","getUserProfile","id_token","httpRequest","webUrl","reason","show","getOneDriveUrl","sharePointUrl","getSharePointUrl","scopes","userInfoUrl","aadV2Url","toString","redirectUri","logoutUrl","authorizeUrl","loginUrl","createParams","prompt","getUserService","additionalParams","defaultParams","URLSearchParams","assign","fetchUserInfo","prop","deleteMetaDataTags","fetchOneDriveUrl","fetchOneDriveQuota","quota","parseInt","total","info","endpointResources","origin","paths","urlPath","pathname","keys","reduce","previous","current","startsWith","warning","infoFuncs","all","requestAccessToken","scope","response_type","params","navigateToAuthEndpoint","access_token","msaUserService","o365UserService","msidUserService","userOrServiceType","getServiceProvider","getAccessToken","isTokenExpired","expires_on","debug","refreshToken","getIdentityProperty","getRefreshToken","refresh_token","grant_type","tokenUrl","refreshAccessToken","saveTokens","Error","statusText","authorize","serviceType","code","accessToken","acquireTokenFromCode","setUserType","login","error_description","typeOrToken","values","tenantInfo","tenants","payload","parseJwtToken","tenant","resolveTypeAndTenant","tenantEntry","identity","getStoredIdentity","unpackStateParam","state","appid","split","inIFrame","searchParams","param","createGuid","frameId","timeout","cleanup","iframe","document","getElementById","parentNode","removeChild","sender","clearTimeout","has","iframeAuthDelay","setTimeout","createElement","setAttribute","style","visibility","position","width","height","border","body","appendChild","src","handleLogin","logout","handleLogout","useAuthNext","toggle","override","checkAuthFlighting","noLogout","checkedTime","toUTCString","storageData","elapsed","authNext","lastCheck","flighted","force","accept","contentType","deviceId","getDeviceId","AppId","FeatureFlags","userServiceProvider","getServiceForUserType","sourceValue","forEach","getEndpointBase","expires_in","Number","item","index","tokenEntry","supportsScopes","required","granted","resourceScope","allTokens","saveUserInfo","expiresOn","userPrincipalName","getPhotoFromServer","photoUrl","photoRequest","responseType","photo","reader","FileReader","onload","readAsDataURL","char","timestamp","performance","rand","random","floor","close","tab","checkTransitionAuth","setInterval","initCheckTransition","isLoggedIn","getEndpointUrlForCurrentUser","getUserPhoto","waitForUserInfo","userInfoListener","giveUpDelay","giveUp","cleanUp","getUserLicenseInfo","getRecentDocs","endpointUrl","getOneDriveItem","itemId","_","getOneDriveSharedItems","supportedMimeType","normalizeMruList","fileList","newFileList","entry","DocumentUrl","Timestamp","Application","FileName","remoteItem","documentUrl","application","mru","mruItem","app","timeStamp","webDavUrl","supportedExtensions","ext","file","mimeType","packageInfo","package","lastModifiedDateTime","fileSystemInfo","lastAccessedDateTime","Id","getRecentDocumentList","documentsUrl","recentDocs","sharedItems","recent","shared","find","mergeSharedDocs","$scope","mruService","self","onLoad","currentDisplayPanel","getRecentDocumentsFromStorage","docList","recentDocuments","openRecentDocument","doc","clickEvent","ctrlKey","LIST_LENGTH","$watch","refreshRecentDocumentsList","recentDocumentsList","newRecentDocuments","listCount","isFileDataValid","appLabel","lastAccessed","toLocaleDateString","imageSource","shortenFilename","createOpenInWebUrl","mruListsEqual","setRecentDocumentsToStorage","oldList","newList","localRecentDocuments","controller","$timeout","$document","localize","onSignOutLinkClick","hasSignedIn","openDocument","signedInWithOrgId","accountPanelOpened","filesSelected","webRedirectInputChecked","telemetryInputChecked","onLine","username","profilePicture","rtl","editorFeatureEnabled","appDescriptionMessage","getLocalizedString","onMenuItemClick","viewMode","currentViewMode","onSignOutClick","onWelcomeSignInClick","onProfileClick","onSignupLinkClick","onWebRedirectInputChange","webRedirect_disabled","onTelemetryInputChange","onFileInputChange","loadFile","openOfficeHome","openSupportPage","supportUrl","openMyAccountPage","browseToRecents","append","createDocument","openSharePointSite","authType","handleTableNavigation","event","which","keyCode","currentCell","closest","currentRow","targetCell","prevCell","previousElementSibling","prevRow","querySelector","nextElementSibling","nextRow","preventDefault","focus","filesSelectedCount","postMessage","appLaunchers","label","iconClass","isBusinessOnly","ready","CheckBoxElements","querySelectorAll","CheckBox","storageResult","signInStatus","directive","require","restrict","link","element","attrs","ngModel","$setViewValue","files","stopPropagation","originalEvent","dataTransfer","dropEffect","currentTarget","click","$routeProvider","when","templateUrl","controllerAs","otherwise","redirectTo","constant","DEFAULT_CLIENT_ID","ENABLED","BROWSERS","ENDPOINT","BAD_USER_TYPE","NO_CLIENT_ID","NO_FEATURES","EXPERIMENTS","SHARING","CONTROL","FLIGHTS","experimentConstants","currentUserType","flights","userTypeMap","getFlight","expName","experimentEnabled","getFlights","flightingDisabled","disabledCheck","defaultFlights","clientId","getClientId","deferral","string","charCodeAt","stringToHex","substring","Features","getFeatures","expKey","setExperimentFlights","invalid","feature","isFeatureInvalid","validateFeatures","featuresToFlights","setFlights","experiment","flightKey","enabledSettings","logName","enabledBrowsers","enabledForUser","experimentService","flightView","flight","setShareUrl","shareUrl","setFlagFromPermissions","getCID","docSplit","docId","canShare","permissions","userId","shortId","permissionObject","grantedTo","grantedToUser","roles","hasWriteAccess","getMSAPermissions","canBeShared","sharingService","shareDoc","init","shareDocument","$ariaProvider","$compileProvider","tabindex","imgSrcSanitizationWhitelist","httpInterceptor","retries","error_codes","logDecorator","$delegate","telemetry","getTruncatedString","logToBackground","severity","filename","toLocaleString","month","day","hour","minute","second","extensionOrigin","trimExtensionOrigin","messageString","prepareLog","originalFunction","severityLevel","args","logParams","fullStack","mappedStack","caller","matched","pop","dumpStorage","decorator","items","iconUrl","wasCleared","imageUrl","progress","angular","$filter","filter","input","i18nDirective","updateText","elm","tag","text","$observe","i18NAttrDirective","attr"],"mappings":"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","file":"\\app.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([37,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { CopyPasteService } from '@ms/office-online-ccp';\r\n\r\nexport default {\r\n    IDTYPE: {\r\n        MSACID: 'MSACID',\r\n        ORGIDPUID: 'OrgIdPUID'\r\n    },\r\n    ACTIVITY: {\r\n        AUTHENTICATION: {\r\n            NAME: 'authentication'\r\n        },\r\n        AUTHORIZATION: {\r\n            NAME: 'authorization'\r\n        },\r\n        NOTIFICATION: {\r\n            NAME: 'notification'\r\n        },\r\n        TELEMETRY: {\r\n            NAME: 'telemetry'\r\n        },\r\n        USERINFO_AVAILABLE: {\r\n            NAME: 'userInfoAvailable'\r\n        },\r\n        SSO: {\r\n            NAME: 'sso'\r\n        },\r\n        LOGOUT: {\r\n            NAME: 'logout'\r\n        },\r\n        REQUEST_TOKEN: {\r\n            NAME: 'requestToken'\r\n        },\r\n        LOG: {\r\n            NAME: 'log'\r\n        },\r\n    },\r\n    APPINFO_NAME: 'OfficeOnlineExtension',\r\n    FILE: {\r\n        APPLICATION_IMAGE_PATH: {\r\n            'excel': 'assets/excel_doc.png',\r\n            'onenote': 'assets/onenote_doc.png',\r\n            'powerpoint': 'assets/powerpoint_doc.png',\r\n            'unknown': 'assets/generic_doc.png',\r\n            'word': 'assets/word_doc.png'\r\n        },\r\n        APPLICATION_LABEL: {\r\n            'excel': 'ExcelOnlineAppName',\r\n            'onenote': 'OneNoteOnlineAppName',\r\n            'powerpoint': 'PowerPointOnlineAppName',\r\n            'unknown': 'OfficeOnlineAppName',\r\n            'word': 'WordOnlineAppName'\r\n        },\r\n        ERROR: {\r\n            'FILE_SIZE_MAX_EXCEEDED': 'fileSizeMaxExceeded',\r\n            'LOAD_FROM_PATH': 'loadFromPath',\r\n            'UNSUPPORTED_FILE_TYPE': 'unsupportedFileType'\r\n        },\r\n        MAX_SIZE_BYTE_LIMIT: 1024 * 1024 * 4,\r\n        OFFICE_APP_FILE_ASSOCIATIONS: {\r\n            EXCEL: 'excel',\r\n            ONENOTE: 'onenote',\r\n            POWERPOINT: 'powerpoint',\r\n            WORD: 'word'\r\n        },\r\n        OFFICE_MIME_TYPES: {\r\n            'application/msword': 'word',\r\n            'application/vnd.openxmlformats-officedocument.wordprocessingml.document': 'word',\r\n            'application/vnd.openxmlformats-officedocument.wordprocessingml.template': 'word',\r\n            'application/vnd.oasis.opendocument.text': 'word',\r\n            'application/vnd.ms-powerpoint': 'powerpoint',\r\n            'application/vnd.openxmlformats-officedocument.presentationml.presentation': 'powerpoint',\r\n            'application/vnd.openxmlformats-officedocument.presentationml.slideshow': 'powerpoint',\r\n            'application/vnd.oasis.opendocument.presentation': 'powerpoint',\r\n            'application/vnd.ms-excel': 'excel',\r\n            'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': 'excel',\r\n            'application/vnd.ms-excel.sheet.binary.macroEnabled.12': 'excel',\r\n            'application/vnd.ms-excel.sheet.macroEnabled.12': 'excel',\r\n            'application/vnd.oasis.opendocument.spreadsheet': 'excel'\r\n        },\r\n        ORIGIN: {\r\n            HTML5: 'html5',\r\n            LOCAL_PATH: 'local_path'\r\n        },\r\n        SUPPORTED_APPLICATIONS: [\r\n            'Word',\r\n            'Excel',\r\n            'PowerPoint',\r\n            'OneNote'\r\n        ],\r\n        SUPPORTED_FILE_TYPES: {\r\n            'doc': 'word',\r\n            'dot': 'word',\r\n            'docx': 'word',\r\n            'dotx': 'word',\r\n            'odt': 'word',\r\n            'ppt': 'powerpoint',\r\n            'pot': 'powerpoint',\r\n            'pps': 'powerpoint',\r\n            // BUG: 214522: 'ppa': 'powerpoint',\r\n            'pptx': 'powerpoint',\r\n            'ppsx': 'powerpoint',\r\n            'odp': 'powerpoint',\r\n            // BUG: 214522: 'xls': 'excel',\r\n            // BUG: 214522: 'xlt': 'excel',\r\n            // BUG: 214522: 'xla': 'excel',\r\n            'xlsx': 'excel',\r\n            'xlsm': 'excel',\r\n            'xlsb': 'excel',\r\n            'ods': 'excel',\r\n            'notebook': 'onenote'\r\n        }\r\n    },\r\n    JQUERY: {\r\n        EVENT_ID: {\r\n            // Reference: http://api.jquery.com/keypress/\r\n            KEYPRESS: {\r\n                ENTER: 13,\r\n                ARROWLEFT: 37,\r\n                ARROWUP: 38,\r\n                ARROWRIGHT: 39,\r\n                ARROWDOWN: 40\r\n            },\r\n            // Reference: http://api.jquery.com/mousedown/\r\n            MOUSEDOWN: {\r\n                LEFT_BUTTON_CLICK: 1\r\n            }\r\n        }\r\n    },\r\n    LINKS: {\r\n        OFFICE_URL: 'https://portal.office.com/home',\r\n        PROGRESSPAGE_URL: 'https://onedrive.live.com',\r\n        SETTINGS_URL: 'chrome://extensions',\r\n        SIGNUP: 'https://onedrive.live.com/about',\r\n        UNINSTALL: 'https://contentstorage.osi.office.net/officeonlineextensionuninstall/uninstall.html',\r\n        OFFICE_HOME_URL: 'https://go.microsoft.com/fwlink/?linkid=859986',\r\n        OFFICE_HOME_DEV_URL: 'https://go.microsoft.com/fwlink/?linkid=860665',\r\n        SUPPORT_URL: 'https://aka.ms/officeextsignin',\r\n        SUPPORT_URL_EDITOR: 'https://aka.ms/OfficeEditorExtension',\r\n        MYACCOUNT_MSA_URL: 'https://go.microsoft.com/fwlink/?LinkId=823747',\r\n        MYACCOUNT_O365_URL: 'https://go.microsoft.com/fwlink/?LinkId=824642',\r\n        APP: {\r\n            WORD: function () {return `https://office.live.com/start/word.aspx?auth=${arguments[0]}&WT.mc_id=Chrome_OfficeApp`},\r\n            EXCEL: function () {return `https://office.live.com/start/excel.aspx?auth=${arguments[0]}&WT.mc_id=Chrome_OfficeApp`},\r\n            POWERPOINT: function () {return `https://office.live.com/start/powerpoint.aspx?auth=${arguments[0]}&WT.mc_id=Chrome_OfficeApp`},\r\n            ONENOTE: function () {return `https://www.onenote.com/notebooks?auth=${arguments[0]}&WT.mc_id=Chrome_OfficeApp`},\r\n            SWAY: function () {return `https://www.sway.com/?auth_pvr=${arguments[0]}&auth_upn=${arguments[1]}&WT.mc_id=Chrome_OfficeApp`},\r\n            SWAY_DEFAULT: 'https://www.sway.com/?WT.mc_id=Chrome_OfficeApp',\r\n            ONEDRIVE: 'https://onedrive.live.com',\r\n            TEAMS: 'https://teams.microsoft.com',\r\n            SHAREPOINT_DEFAULT: 'https://products.office.com/sharepoint',\r\n            OUTLOOK_DEFAULT: 'https://outlook.com',\r\n            OUTLOOK_O365: 'https://outlook.office365.com'\r\n        }\r\n    },\r\n    MENU_VIEWMODE: {\r\n        NONE: 0,\r\n        NEW: 1,\r\n        OPEN: 2,\r\n        ACCOUNT: 3,\r\n        SETTINGS: 4\r\n    },\r\n    OAUTH: {\r\n        ACCESS_TOKEN: 'access_token',\r\n        AUTH_CODE: 'authorization_code',\r\n        CODE: 'code',\r\n        EXPIRES_ON: 'expires_on',\r\n        REFRESH_TOKEN: 'refresh_token',\r\n        SERVICE_ENDPOINT: 'service_endpoint',\r\n        SERVICE_ID: 'service_id'\r\n    },\r\n    O365CONFIG: {\r\n        CLIENT_ID: 'd08f258a-c5dd-4a8f-8afc-9321d67c767a',\r\n        // [SuppressMessage(\"Microsoft.Security\", \"CS002:SecretInNextLine\", Justification=\"[Bug Id: 3579837]: Fake secret that cannot access resources\")]\r\n        CLIENT_SECRET: '4C3JSV:94f_WBYDF+RkH@TX9QhIrzijR',\r\n        GRAPH_RESOURCE: 'https://graph.microsoft.com',\r\n        ENDPOINTS: {\r\n            'officeapps.live.com': 'https://officeapps.live.com',\r\n            'graph.microsoft.com': 'https://graph.microsoft.com'\r\n        },\r\n        INSTANCE: 'https://login.windows.net/common/oauth2/',\r\n        LOGOUT_URI: 'https://login.microsoftonline.com/logout.srf',\r\n        MRU_URL: 'https://ocws.officeapps.live.com/ocs/docs/recent/',\r\n        PHOTO_URL: 'https://graph.microsoft.com/v1.0/me/photo/$value',\r\n        ONEDRIVE_URL: 'https://graph.microsoft.com/v1.0/me/drive/root',\r\n        SHAREPOINT_URL: 'https://graph.microsoft.com/v1.0/sites/root',\r\n        REDIRECT_URI: 'https://login.microsoftonline.com/login.srf',\r\n        UPLOAD_URL: 'https://graph.microsoft.com/v1.0/me/drive/root:/',\r\n        FEDERATED_URL: 'https://login.microsoftonline.com/getuserrealm.srf'\r\n    },\r\n    MSACONFIG: {\r\n        CLIENT_ID: '000000004016DA34',\r\n        // [SuppressMessage(\"Microsoft.Security\", \"CS002:SecretInNextLine\", Justification=\"[Bug Id: 3579838]: Fake secret that cannot access resources\")]\r\n        CLIENT_SECRET: 'qXom9iuDN8qMUKe5oU6DHrRxS8bikLrI',\r\n        INSTANCE: 'https://login.live.com/oauth20_authorize.srf',\r\n        LOGOUT_URI: 'https://login.live.com/oauth20_logout.srf',\r\n        ONEDRIVE_ITEMS_URL: 'https://api.onedrive.com/v1.0/drive/items/',\r\n        PHOTO_URL: 'https://apis.live.net/v5.0/me/picture',\r\n        REDIRECT_URI: 'https://login.live.com/oauth20_desktop.srf',\r\n        SCOPE: 'wl.basic+wl.emails+wl.signin+wl.offline_access+onedrive.readwrite+wl.skydrive',\r\n        URL: 'https://login.live.com/oauth20_token.srf',\r\n        USERINFO_URL: 'https://apis.live.net/v5.0/me'\r\n    },\r\n    /* Notification priorities:\r\n       -2, -1: Do not use; deprecated\r\n       0 - Lowest priority; will not display in Edge\r\n       1 - Medium priority\r\n       2 - Highest priority\r\n    */\r\n    NOTIFICATION: {\r\n        FILEACCESS: {\r\n            id: 'fileAccess',\r\n            priority: 0,\r\n            type: 'basic',\r\n            message: 'NotificationFileAccess'\r\n        },\r\n        FILE_MAX_SIZE_BYTE_LIMIT_REACHED: {\r\n            id: 'fileMaxSizeByteLimitReached',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationFileMaxSizeByteLimitReached'\r\n        },\r\n        FILE_UPLOAD_FAILURE_GENERIC: {\r\n            id: 'fileUploadFailureGeneric',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationFileUploadFailureGeneric'\r\n        },\r\n        FILE_UPLOAD_FAILURE_SERVER: {\r\n            id: 'fileUploadFailureServer',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationFileUploadFailureServer'\r\n        },\r\n        FILE_UPLOAD_FAILURE_UNSUPPORTED_MEDIA: {\r\n            id: 'fileUploadFailureUnsupportedMedia',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationFileUploadFailureUnsupportedMedia'\r\n        },\r\n        FILE_UPLOAD_IN_PROGRESS: {\r\n            id: 'fileUploadInProgress',\r\n            priority: 0,\r\n            type: 'basic',\r\n            message: 'NotificationFileUploadInProgress'\r\n        },\r\n        SETDEFAULT: {\r\n            id: 'setDefault',\r\n            priority: 0,\r\n            type: 'basic',\r\n            message: 'NotificationSetDefault'\r\n        },\r\n        AUTOSAVE: {\r\n            id: 'autoSave',\r\n            priority: 0,\r\n            type: 'basic',\r\n            buttons: [\r\n                {title: 'NotificationAutoSaveButton'}\r\n            ]\r\n        },\r\n        AUTOSAVETOONEDRIVE: 'NotificationAutoSaveToOneDrive',\r\n        AUTOSAVETOSHAREPOINT: 'NotificationAutoSaveToSharePoint',\r\n        NOTSIGNEDIN: {\r\n            id: 'notSignedIn',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationNotSignedIn'\r\n        },\r\n        UNSUPPORTEDFILETYPE: {\r\n            id: 'unsupportedFileType',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationUnsupportedFileType'\r\n        },\r\n        INVALIDSUBSCRIPTION: {\r\n            id: 'invalidSubscription',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationInvalidSubscription'\r\n        },\r\n        WEBDOCREDIRECT: {\r\n            id: 'webDocRedirect',\r\n            priority: 0,\r\n            type: 'basic',\r\n            message: 'NotificationWebDocRedirect',\r\n            buttons: [\r\n                {title: 'NotificationWebDocRedirectButton'}\r\n            ]\r\n        }\r\n    },\r\n    ONEDRIVE: {\r\n        DISPLAY_URL: 'https://onedrive.live.com/view.aspx?cid=',\r\n        INSTANCE: 'https://api.onedrive.com/v1.0',\r\n        QUERY_OPTION: '?@name.conflictBehavior=rename'\r\n    },\r\n    RECENTS: {\r\n        LIST_LENGTH_MSA: 3,\r\n        LIST_LENGTH_O365: 3,\r\n        FILTER: '?apps=powerpoint,word,excel,onenote&sort=date',\r\n        ONEDRIVE_ENDPOINT: 'https://api.onedrive.com/v2.1/drive/recent',\r\n        DISPLAY_PANEL: {\r\n            ERROR: 0,\r\n            LIST: 1,\r\n            LOADING: 2,\r\n            NO_DOCS: 3,\r\n            NONE: 4\r\n        },\r\n        ERROR: {\r\n            CANCELLED: 0,\r\n            GENERIC: 1,\r\n            NO_DOCS_FOUND: 2,\r\n            UNSUPPORTED_USER_TYPE: 3\r\n        }\r\n    },\r\n    SIGNINSTATUS: {\r\n        UNKNOWN: -1,\r\n        NONE: 0,\r\n        HASREFRESHTOKEN: 1,\r\n        SIGNEDIN: 2\r\n    },\r\n    TELEMETRY: {\r\n        COMMAND: {\r\n            SET_DISABLED: 'setDisabledTelemetry',\r\n            TRACK_TRACE: 'trackTrace',\r\n            TRACK_EVENT: 'trackEvent'\r\n        },\r\n        ENABLED_SETTING_STORAGE_KEY: 'telemetry_enabled',\r\n        EVENT_PREFIX: 'OO_CHROME_',\r\n        PII_TYPE: {\r\n            IDENTITY: 10\r\n        }\r\n    },\r\n    USER_TYPE: {\r\n        MSA: 'msa',\r\n        O365: 'aad',\r\n        NONE: 'none'\r\n    },\r\n    USER_SERVICE_TYPE: {\r\n        MSA: 'msaUserService',\r\n        O365: 'o365UserService',\r\n        MSID: 'msidUserService',\r\n        NONE: 'noneUserService'\r\n    },\r\n    TIMEOUT: {\r\n        DEFAULT_REQUEST: 10000,\r\n        USER_INFO_LOOKUP: 5000,\r\n        USER_INFO_LOOKUP_TEST: 50\r\n    },\r\n    COPY_PASTE: {\r\n        TEST: CopyPasteService.testCommand,\r\n        PASTE: CopyPasteService.pasteCommand,\r\n        GET_CLIPBOARD_DATA: CopyPasteService.getClipboardDataCommand,\r\n        GET_AVAILABLE_COMMANDS: CopyPasteService.getAvailableCommandsCommand\r\n    },\r\n    ERROR_RETRIES: {\r\n        HTTP_REQUEST: 3\r\n    },\r\n    BROWSER_ICON: {\r\n        DEFAULT: '../assets/icon_20.png',\r\n        INACTIVE: '../assets/icon_inactive_20.png'\r\n    },\r\n    SSO: {\r\n        MESSAGE_CHANNEL: 'com.microsoft.browsercore',\r\n        RESPONSE_STATUS_SUCCESS: 'Success',\r\n        RESPONSE_STATUS_FAIL: 'Fail',\r\n        RESPONSE_CODE_NO_SUPPORT: 'NoSupport',\r\n        RESPONSE_CODE_INVALID: -2147186943\r\n    },\r\n};\r\n","import BrowserHandler from '../common/browserHandler';\r\n\r\nif (!(window as any).Utilities) {\r\n    (window as any).Utilities = {\r\n        // Deserialize query string to an object\r\n        deserializeQuery: function (query: string): any {\r\n            var match: RegExpExecArray,\r\n                pl = /\\+/g, // Regex for replacing addition symbol with a space\r\n                search = /([^&=]+)=?([^&]*)/g,\r\n                decode = function (s: string): string {\r\n                    return decodeURIComponent(s.replace(pl, ' '));\r\n                },\r\n                obj: any = {};\r\n            match = search.exec(query);\r\n            while (match) {\r\n                obj[decode(match[1])] = decode(match[2]);\r\n                match = search.exec(query);\r\n            }\r\n\r\n            return obj;\r\n        },\r\n\r\n        // Gets the file extension\r\n        getFileExtension: function (fileName: string): string {\r\n            var docExt = '';\r\n            if (fileName) {\r\n                var splitDoc = fileName.match(/(?:\\.)(\\w+)$/);\r\n                if (splitDoc && splitDoc.length > 1) {\r\n                    docExt = splitDoc[splitDoc.length - 1].toLowerCase();\r\n                }\r\n            }\r\n\r\n            return docExt;\r\n        },\r\n\r\n        // Navigate to url\r\n        navigateToUrlWithNewTab: function (url: string, openActive: boolean): void {\r\n            BrowserHandler.tabs.create({\r\n                url: url,\r\n                active: this.isUndefinedOrNull(openActive) ? true : openActive,\r\n            });\r\n            var props: chrome.tabs.CreateProperties;\r\n        },\r\n\r\n        // Simple check for not undefined or null\r\n        isNotUndefinedOrNull: function (obj: any): boolean {\r\n            return !this.isUndefinedOrNull(obj);\r\n        },\r\n\r\n        // Simple check for undefined or null\r\n        isUndefinedOrNull: function (obj: any): boolean {\r\n            return typeof obj === 'undefined' || obj === null;\r\n        },\r\n\r\n        // Determines whether the extension is running in testing mode (running jasmine unit tests)\r\n        isExtensionInTestingMode: function (): boolean {\r\n            return this.isNotUndefinedOrNull((window as any).jasmine);\r\n        },\r\n\r\n        // Determines whether extension is running in developer mode; defaults to true if inconclusive\r\n        isExtensionInDevelopmentMode: function (): boolean {\r\n            // testing mode is not development mode\r\n            if (this.isExtensionInTestingMode()) {\r\n                return false;\r\n            }\r\n\r\n            if ((window as any).browser && (window as any).browser.extension) {\r\n                var url = BrowserHandler.runtime.getURL('');\r\n\r\n                if (typeof url !== 'undefined' && url !== null) {\r\n                    if (/_microsoftofficeonline_/i.test(url)) {\r\n                        return false; // from store\r\n                    }\r\n                }\r\n            }\r\n            if ((window as any).chrome && (window as any).chrome.extension) {\r\n                // Make sure chrome manifest exists\r\n                var manifest = this.getManifest();\r\n                if (manifest === undefined || manifest === null) {\r\n                    return false;\r\n                }\r\n\r\n                // Google Web Store adds key and update_url keys to the manifest\r\n                if (manifest.key !== undefined || manifest.update_url !== undefined) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        },\r\n\r\n        // Determines whether Editor is enabled by looking at the manifest.\r\n        // This should work only in chrome.\r\n        // TODO: change this to something more generic like send a message that only the desired background\r\n        // script will respond to, or generate a look up of partner extensions using their name as found in\r\n        // their manifest \"name\" which is updated when the package is updated/added\r\n        isEditorEnabled: function (): boolean {\r\n            if (!(window.chrome && window.chrome.extension)) {\r\n                return false;\r\n            }\r\n\r\n            // Make sure chrome manifest exists\r\n            var manifest = this.getManifest();\r\n\r\n            // Editor adds a specific background page to the extension\r\n            return manifest && manifest.background && manifest.background.scripts && manifest.background.scripts.includes('editor/background.js');\r\n        },\r\n\r\n        // Determines whether Editor marketing is enabled by looking at the manifest.\r\n        // This should work only in chrome.\r\n        shouldShowEditorMaterial: function (): boolean {\r\n            if (!(window.chrome && window.chrome.extension)) {\r\n                return false;\r\n            }\r\n\r\n            // Make sure chrome manifest exists\r\n            var manifest = this.getManifest();\r\n\r\n            // Editor adds a specific background page to the extension\r\n            return manifest && manifest.version_name && manifest.version_name.indexOf('[ed]') != -1;\r\n        },\r\n\r\n        // Returns the message id to use.\r\n        // This should work only in chrome.\r\n        getAppDescription: function (): string {\r\n            if (!(window.chrome && window.chrome.extension)) {\r\n                return undefined;\r\n            }\r\n\r\n            // Make sure chrome manifest exists\r\n            var manifest = this.getManifest();\r\n\r\n            return manifest.description;\r\n        },\r\n\r\n        // Gets the Chrome runtime manifest object\r\n        getManifest: function (): any {\r\n            // Make sure the BrowserHandler.runtime.getManifest() function exists\r\n            if (typeof BrowserHandler.runtime !== 'object' || typeof BrowserHandler.runtime.getManifest !== 'function') {\r\n                return null;\r\n            }\r\n\r\n            // Make sure manifest exists\r\n            var manifest = BrowserHandler.runtime.getManifest();\r\n            if (manifest === undefined || manifest === null) {\r\n                return null;\r\n            }\r\n\r\n            return manifest;\r\n        },\r\n\r\n        // Returns whether the current context is running in the extension background\r\n        isBackgroundContext: function (): boolean {\r\n            var loc = window.location.href;\r\n\r\n            if ((window as any).browser && (window as any).browser.extension) {\r\n                if (/^ms-browser-extension/.test(loc) && window === BrowserHandler.extension.getBackgroundPage()) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            // Modern chrome does define window.browser so we need to re-check\r\n            if (window.chrome && window.chrome.extension) {\r\n                if (/^chrome/.test(loc) && window === BrowserHandler.extension.getBackgroundPage()) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        // Gets the current time\r\n        getCurrentTime: function (): number {\r\n            return Math.round(new Date().getTime() / 1000.0);\r\n        },\r\n\r\n        // Returns true if we are running on Chrome, false otherwise\r\n        isChrome: function (): boolean {\r\n            // Ref: http://stackoverflow.com/questions/4565112/javascript-how-to-find-out-if-the-user-browser-is-chrome/13348618\r\n            var nav = window.navigator;\r\n            var isOpera = nav.userAgent.indexOf('OPR') > -1;\r\n            // Anaheim has just Edg\r\n            var isIEedge = nav.userAgent.indexOf('Edg') > -1;\r\n\r\n            return this.isNotUndefinedOrNull((window as any).chrome) && nav.vendor.indexOf('Google') > -1 && isOpera === false && isIEedge === false;\r\n        },\r\n\r\n        // Returns the name of the current browser (Chrome or Edge)\r\n        getBrowserName: function (): string {\r\n            if (this.isChrome()) {\r\n                return 'Chrome';\r\n            }\r\n\r\n            return 'Edge';\r\n        },\r\n\r\n        // Following code is required since Edge doesn't support \"__MSG_@@bidi_dir__\" in RS1\r\n        isRTL: function (): boolean {\r\n            var uiLang = BrowserHandler.i18n.getUILanguage();\r\n            return /^ar/i.test(uiLang) || /^fa/i.test(uiLang) || /^he/i.test(uiLang) ? true : false;\r\n        },\r\n\r\n        // Set the pop up icon\r\n        setIcon: function (iconPath: any): void {\r\n            BrowserHandler.browserAction.setIcon({\r\n                path: iconPath,\r\n            });\r\n        },\r\n    };\r\n}\r\n\r\nexport default (window as any).Utilities;\r\n","import angular from 'angular';\r\nimport ariaTelemetry from './ariaTelemetry.service';\r\nimport telemetry from './telemetry.service';\r\n\r\nexport default angular\r\n    .module('app.diagnostics', [])\r\n    .service('telemetry', ['$injector', 'ariaTelemetry', telemetry])\r\n    .service('ariaTelemetry', ['$window', ariaTelemetry])\r\n    .name;\r\n\r\n","import Utilities from '../common/utilities';\r\nimport BrowserHandler from '../common/browserHandler';\r\nimport angular from 'angular';\r\nimport constants from '../common/constants';\r\nimport {AWTLogManager} from '@aria/webjs-sdk';\r\n\r\nexport default function telemetry($injector, ariaTelemetry) {\r\n    var telemetryProviders = [ariaTelemetry];\r\n\r\n    var addCustomProperties = async function (properties) {\r\n        var userService = $injector.get('userService');\r\n\r\n        // Append app specific properties\r\n        if (Utilities.isUndefinedOrNull(properties)) {\r\n            properties = {};\r\n        }\r\n\r\n        properties.pii = [];\r\n        var manifest = Utilities.getManifest();\r\n        if (manifest) {\r\n            properties.appVersion = manifest.version;\r\n        }\r\n\r\n        // Get UI language\r\n        var language = BrowserHandler.i18n.getUILanguage();\r\n        if (Utilities.isNotUndefinedOrNull(language)) {\r\n            properties.language = language;\r\n        }\r\n\r\n        // Add AppInfo.Name for GDPR T3 export\r\n        properties['AppInfo.Name'] = constants.APPINFO_NAME;\r\n        // Add user info properties\r\n        var userType = await userService.getUserType();\r\n        var semanticContext = AWTLogManager.getSemanticContext();\r\n\r\n        if (userType === constants.USER_TYPE.NONE) {\r\n            // Clear UserInfo.Id and UserInfo.IdType context\r\n            semanticContext.setUserId('', '', '');\r\n            return properties;\r\n        }\r\n\r\n        var userInfo = await userService.getUserInfo(userType);\r\n        if (Utilities.isUndefinedOrNull(userInfo)) {\r\n            // Clear UserInfo.Id and UserInfo.IdType context\r\n            semanticContext.setUserId('', '', '');\r\n            return properties;\r\n        }\r\n\r\n        // userInfo properties - cid from MSA\r\n        if (Utilities.isNotUndefinedOrNull(userInfo.cid)) {\r\n            properties.cid = userInfo.cid;\r\n            // Instrument AWT about UserInfo.Id and UserInfo.IdType for GDPR requirements\r\n            semanticContext.setUserId(userInfo.cid);\r\n            properties['UserInfo.IdType'] = constants.IDTYPE.MSACID;\r\n        }\r\n\r\n        // userInfo properties - features (from ExP treatment assignment)\r\n        if (Utilities.isNotUndefinedOrNull(userInfo.features)) {\r\n            properties.experimentFeatures = userInfo.features;\r\n        }\r\n\r\n        // PII identity properties - puid from O365\r\n        if (Utilities.isNotUndefinedOrNull(userInfo.puid)) {\r\n            properties.pii.push({type: constants.TELEMETRY.PII_TYPE.IDENTITY, name: 'puid', value: userInfo.puid});\r\n            // Instrument AWT about UserInfo.Id and UserInfo.IdType for GDPR requirements\r\n            semanticContext.setUserId(userInfo.puid);\r\n            properties['UserInfo.IdType'] = constants.IDTYPE.ORGIDPUID;\r\n        }\r\n\r\n        if (Utilities.isNotUndefinedOrNull(userInfo.tid)) {\r\n            properties['UserInfo.OMSTenantId'] = userInfo.tid;\r\n        }\r\n\r\n        return properties;\r\n    };\r\n\r\n    // Parses correctly the value of setting\r\n    // Returns undefined if the value cannot be parsed.\r\n    //\r\n    // NOTE: Cannot import this from editorUtils as it would\r\n    // create a DI loop.\r\n    var readSettingValueOrUndefined = function (settings, settingName) {\r\n        if (!settings[settingName]) {return undefined}\r\n\r\n        var storedSetting = JSON.parse(settings[settingName]);\r\n\r\n        if (storedSetting.value === undefined) {return undefined}\r\n\r\n        return JSON.parse(storedSetting.value);\r\n    };\r\n\r\n    var getEnabledSettingFromStorage = function () {\r\n        var $q = $injector.get('$q');\r\n        var storage = $injector.get('storage');\r\n        var deferred = $q.defer();\r\n\r\n        storage.get(['telemetry_enabled', 'enableTelemetry']).then(function (result) {\r\n            deferred.resolve(\r\n                Utilities.isUndefinedOrNull(result)\r\n                    || readSettingValueOrUndefined(result, 'enableTelemetry') === true\r\n                    || Utilities.isUndefinedOrNull(result.telemetry_enabled)\r\n                    || result.telemetry_enabled === true\r\n                    ? true : false);\r\n        });\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n    var setEnabledSettingInStorage = function (enabled) {\r\n        var storage = $injector.get('storage');\r\n        storage.set({\r\n            'telemetry_enabled': enabled,\r\n            'enableTelemetry': JSON.stringify(\r\n                {\r\n                    value: JSON.stringify(enabled),\r\n                    lastUpdate: Date.now(),\r\n                    manualOverride: false\r\n                }\r\n            ),\r\n        });\r\n    };\r\n\r\n    var service = {\r\n        // Get telemetry setting from storage\r\n        getEnabledSetting: function () {\r\n            return getEnabledSettingFromStorage();\r\n        },\r\n\r\n        // Set telemetry setting from storage\r\n        setEnabledSetting: function (enabled) {\r\n            // App Insights workaround: send message to background instance to handle sending telemetry data\r\n            if (!Utilities.isBackgroundContext()) {\r\n                BrowserHandler.runtime.sendMessage({\r\n                    activity: constants.ACTIVITY.TELEMETRY.NAME,\r\n                    command: constants.TELEMETRY.COMMAND.SET_DISABLED,\r\n                    enabled: enabled\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            // Cache setting in local storage\r\n            setEnabledSettingInStorage(enabled);\r\n            for (var i = 0; i < telemetryProviders.length; ++i) {\r\n                telemetryProviders[i].setEnabledSetting(enabled);\r\n            }\r\n        },\r\n\r\n        // Use to track custom application events and sends to application insights\r\n        trackEvent: async function (eventName, properties, measurements) {\r\n            if (angular.isUndefined(eventName) || !angular.isString(eventName)) {\r\n                return;\r\n            }\r\n\r\n            // Send message to background instance to handle sending telemetry data\r\n            if (!Utilities.isBackgroundContext()) {\r\n                BrowserHandler.runtime.sendMessage({\r\n                    activity: constants.ACTIVITY.TELEMETRY.NAME,\r\n                    command: constants.TELEMETRY.COMMAND.TRACK_EVENT,\r\n                    eventName: eventName,\r\n                    properties: properties,\r\n                    measurements: measurements\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            properties = await addCustomProperties(properties);\r\n            for (var i = 0; i < telemetryProviders.length; ++i) {\r\n                var propertiesToTrack = angular.extend({}, properties);\r\n                telemetryProviders[i].trackEvent(eventName, propertiesToTrack, measurements);\r\n            }\r\n\r\n        },\r\n\r\n        // Use to track trace messages (ie. logging/diagnostics info) and sends to application insights\r\n        trackTrace: async function (message, properties) {\r\n            if (angular.isUndefined(message) || !angular.isString(message)) {\r\n                return;\r\n            }\r\n\r\n            // Send message to background instance to handle sending telemetry data\r\n            if (!Utilities.isBackgroundContext()) {\r\n                BrowserHandler.runtime.sendMessage({\r\n                    activity: constants.ACTIVITY.TELEMETRY.NAME,\r\n                    command: constants.TELEMETRY.COMMAND.TRACK_TRACE,\r\n                    message: message,\r\n                    properties: properties\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            properties = await addCustomProperties(properties);\r\n            for (var i = 0; i < telemetryProviders.length; ++i) {\r\n                var propertiesToTrack = angular.extend({}, properties);\r\n                telemetryProviders[i].trackTrace(message, propertiesToTrack);\r\n            }\r\n        }\r\n    };\r\n\r\n    // return the local instance when called\r\n    return service;\r\n}\r\n","import Utilities from '../common/utilities';\r\nimport './telemetry.service';\r\nimport constants from '../common/constants';\r\nimport {AWTEventProperties} from '@aria/webjs-sdk';\r\n\r\nexport default function ariaTelemetry($window) {\r\n    var addEventProperties = function (eventProperties, properties) {\r\n        if (Utilities.isUndefinedOrNull(eventProperties) || Utilities.isUndefinedOrNull(properties)) {\r\n            return;\r\n        }\r\n\r\n        // Obfuscate pii properties out and remove\r\n        if (!Utilities.isUndefinedOrNull(properties.pii)) {\r\n            for (var i = 0; i <= properties.pii.length - 1; ++i) {\r\n                eventProperties.setProperty(properties.pii[i].name, properties.pii[i].value, properties.pii[i].type);\r\n            }\r\n            delete properties.pii;\r\n        }\r\n\r\n        // Add rest of properties\r\n        for (var property in properties) {\r\n            if (properties.hasOwnProperty(property)) {\r\n                eventProperties.setProperty(property, properties[property]);\r\n            }\r\n        }\r\n    };\r\n\r\n    var enabledSetting = true;\r\n\r\n    this.setEnabledSetting = function (enabled) {\r\n        enabledSetting = enabled;\r\n    };\r\n\r\n    this.trackEvent = function (eventName, properties, measurements) {\r\n        if (!enabledSetting) {\r\n            return;\r\n        }\r\n\r\n        // ARIA: Bug when dots are in event name; replace with underscores\r\n        eventName = eventName.replace(/\\./g, '_');\r\n\r\n        var eventProperties = new AWTEventProperties();\r\n        eventProperties.setName(constants.TELEMETRY.EVENT_PREFIX + eventName);\r\n        addEventProperties(eventProperties, properties);\r\n        addEventProperties(eventProperties, measurements);\r\n\r\n        $window.ariaLogger.logEvent(eventProperties);\r\n    };\r\n\r\n    this.trackTrace = function (message, properties) {\r\n        if (!enabledSetting) {\r\n            return;\r\n        }\r\n\r\n        var eventProperties = new AWTEventProperties();\r\n        eventProperties.setName(constants.TELEMETRY.EVENT_PREFIX + message);\r\n        eventProperties.setProperty('severity', message);\r\n        addEventProperties(eventProperties, properties);\r\n\r\n        $window.ariaLogger.logEvent(eventProperties);\r\n    };\r\n}\r\n","declare let browser: any;\r\ndeclare let chrome: any;\r\n\r\nvar browserListeners: any[] = [];\r\nvar propertyList = {};\r\n\r\nfunction mergeProperties(target: any, source: any): any {\r\n    for (const [key, value] of Object.entries(source)) {\r\n        if (!target[key]) {\r\n            target[key] = value;\r\n            continue;\r\n        }\r\n\r\n        if (typeof value !== typeof target[key]) {\r\n            console.log(`skipping ${key} due to conflicting types`);\r\n            continue;\r\n        }\r\n\r\n        if (Array.isArray(value)) {\r\n            target[key] = target[key].concat(value);\r\n            continue;\r\n        }\r\n\r\n        if (typeof value === 'object') {\r\n            target[key] = mergeProperties(target[key], value);\r\n            continue;\r\n        }\r\n        target[key] = value;\r\n    }\r\n\r\n    return target;\r\n}\r\n\r\nexport default (function (): any {\r\n    var browserHandler = ((): any => {\r\n        if (typeof browser === 'object') {\r\n            var edgeBrowser = Object.create(browser);\r\n\r\n            edgeBrowser.notifications = {\r\n                clear: function (notificationId: string, callback: (wasCleared: boolean) => void): void {\r\n                    // Invoke callback with wasCleared == false\r\n                    callback(false);\r\n                },\r\n                create: function (\r\n                    notificationId: string,\r\n                    options: chrome.notifications.NotificationOptions,\r\n                    callback: (notificationId: string) => void\r\n                ): void {\r\n                    // Use window alert dialog to display notification message\r\n                    if (typeof options !== 'undefined' && options !== null) {\r\n                        // Only show when priority is 1 or 2\r\n                        if (typeof options.priority !== 'undefined' && options.priority !== null && options.priority > 0) {\r\n                            window.alert(options.message);\r\n                        }\r\n                    }\r\n\r\n                    // Invoke callback with notification id\r\n                    callback(notificationId);\r\n                },\r\n                onButtonClicked: {\r\n                    addListener: function (notificationId: string): void {\r\n                        // Not implemented\r\n                    },\r\n                },\r\n                onClicked: {\r\n                    addListener: function (notificationId: string): void {\r\n                        // Not implemented\r\n                    },\r\n                },\r\n            };\r\n\r\n            edgeBrowser.runtime = {\r\n                getPlatformInfo: function (callback: (platformInfo: chrome.runtime.PlatformInfo) => void): void {\r\n                    // Does not execute the callback function\r\n                    // Not implemented\r\n                },\r\n            };\r\n        } else if (typeof chrome === 'object') {\r\n            return Object.create(chrome);\r\n        }\r\n    })();\r\n\r\n    // when running in tests, provide override the necessary functions\r\n    if ((window as any).jasmine) {\r\n        const browserMock = {\r\n            mock: true,\r\n            browserAction: {\r\n                setIcon: function (icon: string): void {},\r\n            },\r\n            extension: {\r\n                getURL: function (name: any): string {\r\n                    return '';\r\n                },\r\n            },\r\n            i18n: {\r\n                getUILanguage: function (name: any, callback: any): string {\r\n                    return '';\r\n                },\r\n                getMessage: function (): string {\r\n                    return '';\r\n                },\r\n            },\r\n            runtime: {\r\n                onMessage: {\r\n                    addListener: function (listener: any): any {\r\n                        browserListeners.push(listener);\r\n                    },\r\n                    removeListener: function (listener: any): void {\r\n                        browserListeners.splice(browserListeners.indexOf(listener), 1);\r\n                    },\r\n                },\r\n                sendMessage: function (message: any): any {\r\n                    for (let i = 0; i < browserListeners.length; ++i) {\r\n                        browserListeners[i](message);\r\n                    }\r\n                },\r\n                id: 'ndjpnladcallmjemlbaebfadecfhkepb',\r\n            },\r\n            storage: {\r\n                local: {\r\n                    get: function (name: string, callback: (arg0: { [x: number]: any }) => void): any {\r\n                        callback({\r\n                            [name]: (propertyList as any)[name],\r\n                        });\r\n                    },\r\n\r\n                    set: function (data: { [x: string]: any; hasOwnProperty: (arg0: string) => any }): void {\r\n                        for (const key in data) {\r\n                            if (data.hasOwnProperty(key)) {\r\n                                (propertyList as any)[key] = /*JSON.stringify*/ data[key];\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    remove: function (name: string | number, callback: (arg0: any) => void): void {\r\n                        delete (propertyList as any)[name];\r\n                        callback(propertyList);\r\n                    },\r\n\r\n                    clear: function (name: any, callback: any): void {\r\n                        propertyList = {};\r\n                    },\r\n                },\r\n            },\r\n            tabs: {\r\n                create: function (createProperties: any, callback: (arg0: {}) => void): void {\r\n                    if (callback) callback({});\r\n                },\r\n            },\r\n        };\r\n        browserHandler = mergeProperties(browserHandler || {}, browserMock);\r\n        if (!(window as any).chrome) {\r\n            (window as any).chrome = browserHandler;\r\n        }\r\n    }\r\n\r\n    if (!(window as any).BrowserHandler) {\r\n        (window as any).BrowserHandler = browserHandler;\r\n    }\r\n\r\n    return browserHandler;\r\n})();\r\n","import angular from 'angular';\r\nimport protectedResourceInterceptor from './protectedResourceInterceptor';\r\nimport userService from './user.service';\r\nimport msidUserService from './msidUser.service';\r\nimport msaUserService from './msaUser.service';\r\nimport o365UserService from './o365User.service';\r\nimport '../common';\r\n\r\nexport default angular\r\n    .module('app.user', [])\r\n    .config(['$httpProvider', '$provide', appUser])\r\n    .factory('protectedResourceInterceptor', ['$q', '$log', '$injector', protectedResourceInterceptor])\r\n    .service('msaUserService', ['$log', '$injector', msaUserService])\r\n    .service('o365UserService', ['$log', '$injector', 'notification', o365UserService])\r\n    .service('msidUserService', ['$log', '$injector', 'notification', msidUserService])\r\n    .factory('userService', ['$q', '$log', '$injector', 'storage', 'notification', 'msaUserService', 'o365UserService', 'msidUserService', userService])\r\n    .name;\r\n\r\nfunction appUser($httpProvider, $provide) {\r\n    // Register http interceptors\r\n    $httpProvider.interceptors.push('protectedResourceInterceptor');\r\n}\r\n","import Utilities from '../common/utilities';\r\nimport './user.service';\r\nimport constants from '../common/constants';\r\n\r\n\r\nexport default function protectedResourceInterceptor($q, $log, $injector) {\r\n    var userService = $injector.get('userService');\r\n\r\n    return {\r\n        request: function (config) {\r\n            var deferred = $q.defer();\r\n\r\n            if (Utilities.isUndefinedOrNull(config) || Utilities.isUndefinedOrNull(config.headers)) {\r\n                $log.error('protectedResourceInterceptor.request: http request config is null or undefined');\r\n                deferred.resolve(config);\r\n                return deferred.promise;\r\n            }\r\n\r\n            var userType = config.headers['X-UserType'];\r\n\r\n            // Only apply http config changes to requests that have custom header\r\n            if (Utilities.isUndefinedOrNull(userType)) {\r\n                deferred.resolve(config);\r\n                return deferred.promise;\r\n            }\r\n\r\n            var resource = config.headers['X-Resource'];\r\n\r\n            // Remove the custom header; no longer needed\r\n            delete config.headers['X-Resource'];\r\n            delete config.headers['X-UserType'];\r\n            userService.acquireToken(userType, config.url, resource).then(token => {\r\n                // Validate userType within acquireToken method\r\n                if (!Utilities.isUndefinedOrNull(token)) {\r\n                    config.headers.Authorization = 'Bearer ' + token;\r\n                }\r\n                else {\r\n                    $log.warn(`failed to get auth token for type:${userType} url: ${config.url}, resource ${resource}`);\r\n                }\r\n                deferred.resolve(config);\r\n            });\r\n\r\n            return deferred.promise;\r\n        },\r\n        responseError: function (response) {\r\n            if (response && response.status === 401) {\r\n                if (Utilities.isNotUndefinedOrNull(response.config) &&\r\n                    (response.config.url === constants.O365CONFIG.SHAREPOINT_URL || response.config.url === constants.O365CONFIG.PHOTO_URL)) {\r\n                    // Don't clear the token if the request is made to get the sharepoint site url or the user photo.\r\n                    return $q.reject(response);\r\n                }\r\n\r\n                userService.clearToken();\r\n            }\r\n\r\n            return $q.reject(response);\r\n        }\r\n    };\r\n}\r\n","import constants from '../common/constants';\r\n\r\nexport default function msaUserService($log, $injector) {\r\n    this.type = constants.USER_TYPE.MSA;\r\n    this.type = constants.USER_SERVICE_TYPE.MSA;\r\n    this.userType = constants.USER_TYPE.MSA;\r\n    this.getConfig = function () {\r\n        var config = {\r\n            'tokenUrl': constants.MSACONFIG.URL,\r\n            'params': {\r\n                'client_id': constants.MSACONFIG.CLIENT_ID,\r\n                'client_secret': constants.MSACONFIG.CLIENT_SECRET,\r\n                'redirect_uri': constants.MSACONFIG.REDIRECT_URI\r\n            },\r\n            'resource': constants.ONEDRIVE.INSTANCE,\r\n            'loginUrl': constants.MSACONFIG.INSTANCE + '?response_type=code&client_id=' + constants.MSACONFIG.CLIENT_ID + '&redirect_uri=' + constants.MSACONFIG.REDIRECT_URI + '&scope=' + constants.MSACONFIG.SCOPE,\r\n            'logoutUrl': constants.MSACONFIG.LOGOUT_URI,\r\n            'photoUrl': constants.MSACONFIG.PHOTO_URL,\r\n            'documentsUrl': constants.RECENTS.ONEDRIVE_ENDPOINT\r\n        };\r\n\r\n        return config;\r\n    };\r\n\r\n    this.lookupUserInfo = async function (data) {\r\n        return new Promise((resolve, reject) => {\r\n            var userInfo = {\r\n                oneDriveUrl: constants.LINKS.APP.ONEDRIVE\r\n            };\r\n\r\n            var $http = $injector.get('$http');\r\n            var request = {\r\n                method: 'GET',\r\n                url: constants.MSACONFIG.USERINFO_URL,\r\n                headers: {\r\n                    'X-UserType': constants.USER_SERVICE_TYPE.MSA\r\n                }\r\n            };\r\n\r\n            $http(request).then(\r\n                function (response) {\r\n                    var data = response.data;\r\n                    userInfo.email = data.emails.account;\r\n                    userInfo.cid = data.id;\r\n                    resolve(userInfo);\r\n                },\r\n                function () {\r\n                    reject(`msaUser.Service.lookupUserInfo http request failed`);\r\n                });\r\n        });\r\n    };\r\n\r\n    this.getResourceForEndpoint = function (endpoint) {\r\n        return constants.MSACONFIG.SCOPE;\r\n    };\r\n}\r\n","import Utilities from '../common/utilities';\r\nimport constants from '../common/constants';\r\n\r\nexport default function o365UserService($log, $injector, notification) {\r\n    this.type = constants.USER_SERVICE_TYPE.O365;\r\n    this.userType = constants.USER_TYPE.O365;\r\n    this.getConfig = function () {\r\n        var config = {\r\n            'tokenUrl': constants.O365CONFIG.INSTANCE + 'token',\r\n            'params': {\r\n                'client_id': constants.O365CONFIG.CLIENT_ID,\r\n                'client_secret': constants.O365CONFIG.CLIENT_SECRET,\r\n                'redirect_uri': constants.O365CONFIG.REDIRECT_URI,\r\n                'resource': constants.O365CONFIG.GRAPH_RESOURCE\r\n            },\r\n            'resource': constants.O365CONFIG.GRAPH_RESOURCE,\r\n            'loginUrl': constants.O365CONFIG.INSTANCE + 'authorize?response_type=code&client_id=' + constants.O365CONFIG.CLIENT_ID + '&redirect_uri=' + constants.O365CONFIG.REDIRECT_URI + '&response_mode=query',\r\n            'logoutUrl': constants.O365CONFIG.LOGOUT_URI,\r\n            'photoUrl': constants.O365CONFIG.PHOTO_URL,\r\n            'documentsUrl': constants.O365CONFIG.MRU_URL + constants.RECENTS.FILTER\r\n        };\r\n\r\n        return config;\r\n    };\r\n\r\n    this.getResourceForEndpoint = function (endpoint) {\r\n        var resource = this.getConfig().resource;\r\n        if (Utilities.isUndefinedOrNull(endpoint)) {\r\n            return resource;\r\n        }\r\n\r\n        // Return resource from config data.\r\n        for (var configEndpoint in constants.O365CONFIG.ENDPOINTS) {\r\n            if (constants.O365CONFIG.ENDPOINTS.hasOwnProperty(configEndpoint) && endpoint.indexOf(configEndpoint) > -1) {\r\n                resource = constants.O365CONFIG.ENDPOINTS[configEndpoint];\r\n                break;\r\n            }\r\n        }\r\n\r\n        return resource;\r\n    };\r\n\r\n    this.lookupUserInfo = async function (tokenData) {\r\n        var userInfo = getUserProfile(tokenData.id_token);\r\n        const oneDriveUrl = await getOneDriveUrl();\r\n        userInfo.oneDriveUrl = oneDriveUrl;\r\n\r\n        const sharePointUrl = await getSharePointUrl();\r\n        userInfo.sharePointUrl = sharePointUrl || constants.LINKS.APP.SHAREPOINT_DEFAULT;\r\n        return userInfo;\r\n    };\r\n\r\n    async function getOneDriveUrl() {\r\n        var request = {\r\n            method: 'GET',\r\n            url: constants.O365CONFIG.ONEDRIVE_URL,\r\n            headers: {\r\n                'X-UserType': constants.USER_TYPE.O365\r\n            }\r\n        };\r\n\r\n        var userService = $injector.get('userService');\r\n        try {\r\n            var data = await userService.httpRequest(request);\r\n            if (data.webUrl) {\r\n                return data.webUrl;\r\n            }\r\n\r\n            // There is no service info for OD4B\r\n            return Promise.reject('o365UserService.DiscoverServiceEndpoint - Invalid resource');\r\n        }\r\n        catch (reason) {\r\n            clearToken();\r\n            notification.show(constants.NOTIFICATION.INVALIDSUBSCRIPTION);\r\n            $log.error('0365User.getOneDriveUrl failed: %s', reason);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    async function getSharePointUrl() {\r\n        var request = {\r\n            method: 'GET',\r\n            url: constants.O365CONFIG.SHAREPOINT_URL,\r\n            headers: {\r\n                'X-UserType': constants.USER_SERVICE_TYPE.O365\r\n            }\r\n        };\r\n\r\n        var userService = $injector.get('userService');\r\n        try {\r\n            var data = await userService.httpRequest(request);\r\n            if (data.webUrl) {\r\n                return data.webUrl;\r\n            }\r\n            return Promise.reject('No SharePoint info for user');\r\n        }\r\n        catch (reason) {\r\n            $log.error('0365User.getSharePointUrl failed: %s', reason);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function clearToken() {\r\n        var userService = $injector.get('userService');\r\n        userService.clearToken();\r\n    }\r\n\r\n    // Method from ADAL to extract user profile from idtoken\r\n    // Reference: https://github.com/AzureAD/azure-activedirectory-library-for-js/blob/master/lib/adal.js\r\n    function getUserProfile(idToken) {\r\n        var user = {};\r\n        var parsedJson = extractIdToken(idToken);\r\n        if (parsedJson && parsedJson.hasOwnProperty('aud')) {\r\n            if (parsedJson.aud.toLowerCase() === constants.O365CONFIG.CLIENT_ID.toLowerCase()) {\r\n                if (parsedJson.hasOwnProperty('upn')) {\r\n                    user.email = parsedJson.upn;\r\n                } else if (parsedJson.hasOwnProperty('email')) {\r\n                    user.email = parsedJson.email;\r\n                }\r\n\r\n                if (parsedJson.hasOwnProperty('puid')) {\r\n                    user.puid = parsedJson.puid;\r\n                }\r\n\r\n                if (parsedJson.hasOwnProperty('tid')) {\r\n                    user.tid = parsedJson.tid;\r\n                }\r\n            } else {\r\n                $log.error('IdToken has invalid aud field');\r\n            }\r\n        }\r\n\r\n        return user;\r\n    }\r\n\r\n    // Method from ADAL to extract user profile from idtoken\r\n    // Reference: https://github.com/AzureAD/azure-activedirectory-library-for-js/blob/master/lib/adal.js\r\n    function extractIdToken(encodedIdToken) {\r\n        // id token will be decoded to get the username\r\n        var decodedToken = decodeJwt(encodedIdToken);\r\n        if (!decodedToken) {\r\n            return null;\r\n        }\r\n\r\n        try {\r\n            var base64IdToken = decodedToken.JWSPayload;\r\n            var base64Decoded = base64DecodeStringUrlSafe(base64IdToken);\r\n            if (!base64Decoded) {\r\n                this._logstatus('The returned id_token could not be base64 url safe decoded.');\r\n                return null;\r\n            }\r\n\r\n            // ECMA script has JSON built-in support\r\n            return JSON.parse(base64Decoded);\r\n        } catch (err) {\r\n            $log.error('The returned id_token could not be decoded: ' + err.stack);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    // Method from ADAL to extract user profile from idtoken\r\n    // Reference: https://github.com/AzureAD/azure-activedirectory-library-for-js/blob/master/lib/adal.js\r\n    function base64DecodeStringUrlSafe(base64IdToken) {\r\n        // html5 should support atob function for decoding\r\n        base64IdToken = base64IdToken.replace(/-/g, '+').replace(/_/g, '/');\r\n        if (window.atob) {\r\n            return decodeURIComponent(escape(window.atob(base64IdToken)));\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // Method from ADAL to extract user profile from idtoken\r\n    // Reference: https://github.com/AzureAD/azure-activedirectory-library-for-js/blob/master/lib/adal.js\r\n    function decodeJwt(jwtToken) {\r\n        var idTokenPartsRegex = /^([^.\\s]*)\\.([^.\\s]+)\\.([^.\\s]*)$/;\r\n\r\n        var matches = idTokenPartsRegex.exec(jwtToken);\r\n        if (!matches || matches.length < 4) {\r\n            $log.error('The returned id_token is not parseable.');\r\n            return null;\r\n        }\r\n\r\n        var crackedToken = {\r\n            header: matches[1],\r\n            JWSPayload: matches[2],\r\n            JWSSig: matches[3],\r\n        };\r\n\r\n        return crackedToken;\r\n    }\r\n}\r\n","import constants from '../common/constants';\r\n\r\nexport default function msidUserService($log, $injector, notification) {\r\n    const type = constants.USER_SERVICE_TYPE.MSID;\r\n    var userService = undefined;\r\n    // previous app registration also included (are they still needed?)\r\n    // Graph:\r\n    // offline_access, Directory.AccessAsUser.All, User.Read.All\r\n    // SharePoint:\r\n    // MyFiles.Read, MyFiles.Write\r\n    const scopes = 'email openid profile user.read';\r\n    const userInfoUrl = 'https://graph.microsoft.com/v1.0/me/';\r\n    const aadV2Url = new URL('https://login.microsoftonline.com/common/oauth2/').toString();\r\n    const msaOAuthUrl = new URL('https://login.live.com/oauth20_authorize.srf').toString();\r\n    const redirectUri = new URL('nativeclient', aadV2Url).toString();\r\n    const logoutUrl = new URL('v2.0/logoutsession', aadV2Url).toString();\r\n    const authorizeUrl = new URL('v2.0/authorize', aadV2Url).toString();\r\n    const aadClientId = 'e28ff72c-58a5-49ba-8125-42ec264d7cd0'; // newest clientId\r\n    const loginUrl = (() => {\r\n        var loginUrl = new URL(authorizeUrl);\r\n        loginUrl.search = createParams({prompt: 'select_account'});\r\n        return loginUrl.toString();\r\n    })();\r\n\r\n    function getUserService() {\r\n        if (!userService) {\r\n            userService = $injector.get('userService');\r\n        }\r\n\r\n        return userService;\r\n    }\r\n\r\n    function createParams(additionalParams) {\r\n        const defaultParams = {\r\n            'client_id': aadClientId,\r\n            'response_type': 'id_token token',\r\n            'redirect_uri': redirectUri,\r\n            'scope': scopes,\r\n            'response_mode': 'fragment',\r\n        };\r\n        const params = new URLSearchParams(Object.assign({}, defaultParams, additionalParams));\r\n        return params.toString();\r\n    }\r\n\r\n    // Could we use chrome.identity.launchWebAuthFlow()\r\n    // with redirect url https://ndjpnladcallmjemlbaebfadecfhkepb.chromiumapp.org/response?\r\n    // see https://developer.chrome.com/extensions/identity#method-launchWebAuthFlow\r\n    function getConfig() {\r\n        return {\r\n            'loginUrl': loginUrl,\r\n            'logoutUrl': logoutUrl,\r\n            'photoUrl': 'https://graph.microsoft.com/beta/me/photo/$value',\r\n            'userInfoUrl': userInfoUrl,\r\n            'documentsUrl': 'https://graph.microsoft.com/v1.0/me/drive/recent'\r\n        };\r\n    }\r\n\r\n    async function handleLogin() {\r\n        const msaParams = {\r\n            'url': msaOAuthUrl,\r\n            'aadredir': 1,\r\n            'prompt': 'select_account'\r\n        };\r\n\r\n        const aadParams = {\r\n            'url': authorizeUrl,\r\n            'prompt': 'select_account'\r\n        };\r\n\r\n        // TODO: Not sure if aadv2 requires dual stack approach where we try one endpoint and then another but if\r\n        // so we then need to determine if we should start with AAD or MSA but default to MSA since it can\r\n        // handle sign up in case they want to create a new account for overview on how to handle dual stack\r\n        // select_account see https://identitydocs.azurewebsites.net/static/overview/user_discovery.html\r\n        const authEndpointParams = [];\r\n        // authEndpointParams.push(msaParams); // not adding until app configuration is updated to support msa\r\n        authEndpointParams.push(aadParams);\r\n\r\n        var accountId = undefined;\r\n        for (var endpointParams of authEndpointParams) {\r\n            var loginUrl = new URL(endpointParams.url);\r\n            delete endpointParams.url;\r\n\r\n            if (accountId) {\r\n                endpointParams.set('login_hint', accountId);\r\n            }\r\n            loginUrl.search = createParams(endpointParams);\r\n            var response = await getUserService().navigateToAuthEndpoint(loginUrl.toString(), type);\r\n            if (!response.error || response.error === 'aad_auth') {\r\n                return;\r\n            }\r\n\r\n            if (response.username) {\r\n                accountId = response.username;\r\n            }\r\n        }\r\n    }\r\n\r\n    async function lookupUserInfo(token) {\r\n        const infoFuncs = [\r\n            fetchUserInfo(),\r\n            fetchOneDriveUrl(),\r\n            fetchOneDriveQuota()\r\n        ];\r\n        var results = await Promise.all(infoFuncs);\r\n\r\n        return results.reduce((previous, current) => {\r\n            return Object.assign(previous, current);\r\n        });\r\n    }\r\n\r\n    function deleteMetaDataTags(object) {\r\n        for (const prop in object) {\r\n            if (object.hasOwnProperty(prop)) {\r\n                if (prop.match(/^@odata/i)) {\r\n                    delete object[prop];\r\n                }\r\n            }\r\n        }\r\n        return object;\r\n    }\r\n\r\n    async function fetchUserInfo() {\r\n        var request = {\r\n            method: 'GET',\r\n            url: userInfoUrl,\r\n            headers: {\r\n                'X-UserType': type\r\n            }\r\n        };\r\n\r\n        var userInfo = {};\r\n        try {\r\n            var response = await getUserService().httpRequest(request);\r\n            userInfo = deleteMetaDataTags(response);\r\n        }\r\n        catch (reason) {\r\n            return Promise.reject(`msidUser.fetchUserInfo failed: ${reason}`);\r\n        }\r\n\r\n        return userInfo;\r\n    }\r\n\r\n    async function fetchOneDriveUrl() {\r\n        var request = {\r\n            method: 'GET',\r\n            url: constants.O365CONFIG.ONEDRIVE_URL,\r\n            headers: {\r\n                'X-UserType': type\r\n            }\r\n        };\r\n\r\n        try {\r\n            var data = await getUserService().httpRequest(request);\r\n            if (data.webUrl) {\r\n                return {'oneDriveUrl': data.webUrl};\r\n            }\r\n\r\n            // There is no service info for OD4B\r\n            return Promise.reject('o365UserService.DiscoverServiceEndpoint - Invalid resource');\r\n        }\r\n        catch (reason) {\r\n            notification.show(constants.NOTIFICATION.INVALIDSUBSCRIPTION);\r\n            $log.error(`msidUser.fetchOneDriveUrl failed: ${JSON.stringify(reason)}`);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    // accounts.microsoft.com makes a call to\r\n    // https://account.microsoft.com/services/api/subscriptions?X-Requested-With=XMLHttpRequest&excludeWindowsStoreInstallOptions=false&_=1571422283464\r\n    // which seems to get consumer subscriptions, maybe another option?\r\n    async function fetchSubscriptionInfo(userType) {\r\n        var request = {\r\n            method: 'GET',\r\n            url: 'https://graph.microsoft.com/v1.0/me/licenseDetails',\r\n            headers: {\r\n                'X-UserType': userType\r\n            }\r\n        };\r\n\r\n        var licenses = {};\r\n        try {\r\n            var response = await getUserService().httpRequest(request);\r\n\r\n            for (const license of response.value.values()) {\r\n                const sku = license.skuPartNumber.toLowerCase();\r\n                var plans = license.servicePlans.filter(plan => plan.provisioningStatus === 'Success').map(plan => plan.servicePlanName.toLowerCase());\r\n                licenses[sku] = plans;\r\n            }\r\n            return {'licenses': licenses};\r\n        }\r\n        catch (reason) {\r\n            $log.error(`msidUser.fetchSubscriptionInfo failed: ${JSON.stringify(reason)}`);\r\n            return;\r\n        }\r\n    }\r\n\r\n    async function fetchOneDriveQuota() {\r\n        var request = {\r\n            method: 'GET',\r\n            url: 'https://graph.microsoft.com/v1.0/me/drive',\r\n            headers: {\r\n                'X-UserType': type\r\n            }\r\n        };\r\n\r\n        try {\r\n            var response = await getUserService().httpRequest(request);\r\n            var quota = parseInt(response.quota.total) / (1024 * 1024 * 1024);\r\n            quota = Math.round(quota * 100) / 100;\r\n            $log.info(`OneDrive quota: ${JSON.stringify(response.quota, null, '\\t')} capacity: ${quota}GB`);\r\n            return {'driveQuota': response.quota.total, 'driveQuotaString': `${quota}GB`};\r\n        }\r\n        catch (reason) {\r\n            return Promise.reject(`msidUser.fetchOneDriveQuota failed: ${reason}`);\r\n        }\r\n    }\r\n\r\n    function getResourceForEndpoint(endpoint) {\r\n        if (!endpoint) {\r\n            return scopes;\r\n        }\r\n\r\n        const endpointResources = {\r\n            'https://graph.microsoft.com': {\r\n                '/v1.0/me/': scopes,\r\n                '/v1.0/me/drive/recent': 'Files.ReadWrite.All' //'https://graph.microsoft.com/Files.ReadWrite.All'\r\n            },\r\n            'https://nleditor.osi.office.net':\r\n            {\r\n                '/NlEditor/': 'https://nleditor.osi.office.net/NlEditor/instrumentation.write'\r\n            }\r\n        };\r\n\r\n        try {\r\n            const url = new URL(endpoint);\r\n            if (!endpointResources.hasOwnProperty(url.origin)) {\r\n                return scopes;\r\n            }\r\n            const paths = endpointResources[url.origin];\r\n            const urlPath = url.pathname;\r\n\r\n            var match = Object.keys(paths).reduce((previous, current) => {\r\n                if (urlPath.startsWith(current) && current.length > previous.length) {\r\n                    return current;\r\n                } else {\r\n                    return previous;\r\n                }\r\n            });\r\n\r\n            return paths[match];\r\n        }\r\n        catch (reason) {\r\n            $log.warning(`msidUser.Service threw an exception: ${reason}`);\r\n            return scopes;\r\n        }\r\n    }\r\n\r\n    async function requestAccessToken(resource, userInfo) {\r\n        var additionalParams = {scope: resource, response_type: 'token'};\r\n        if (userInfo && userInfo.email) {\r\n            // additionalParams['domain_hint'] = organizations;\r\n            additionalParams['login_hint'] = userInfo.email;\r\n        }\r\n        var params = createParams(additionalParams);\r\n        var url = new URL(authorizeUrl);\r\n\r\n        url.search = params.toString();\r\n        var result = await getUserService().navigateToAuthEndpoint(url.href, type, true);\r\n\r\n        if (!result || !result.access_token) {\r\n            // eslint-disable-next-line no-debugger\r\n            debugger;\r\n            $log.info(`failed to get token from iframe for resource ${resource}`);\r\n            return Promise.reject(`unable to retrieve result from ${url.href}`);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    return {\r\n        type: type,\r\n        getConfig: getConfig,\r\n        getResourceForEndpoint: getResourceForEndpoint,\r\n        // handleLogin: handleLogin,\r\n        lookupUserInfo: lookupUserInfo,\r\n        requestAccessToken: requestAccessToken\r\n    };\r\n}\r\n","import BrowserHandler from '../common/browserHandler';\r\nimport constants from '../common/constants';\r\nimport Utilities from '../common/utilities';\r\n\r\n// ppe = 'https://nleditor.osi.officeppe.net/NLEditor/BrowserExtension/V1'\r\nconst FlightingUrl = 'https://nleditor.osi.office.net/NLEditor/api/V1/BrowserExtension';\r\n\r\nexport default function userService($q, $log, $injector, storage, notification, msaUserService, o365UserService, msidUserService) {\r\n    function authMessageListener(message, sender, response) {\r\n        switch (message.activity) {\r\n            case constants.ACTIVITY.LOGOUT.NAME:\r\n                logout().then(() => {\r\n                    response();\r\n                });\r\n\r\n                return true;\r\n            case constants.ACTIVITY.AUTHENTICATION.NAME:\r\n                login(message.type).then(result => {\r\n                    response(result);\r\n                });\r\n\r\n                return true;\r\n            case constants.ACTIVITY.AUTHORIZATION.NAME:\r\n                {\r\n                    // This handler can probably go away if it's determined that we don't\r\n                    // need to call authenticate for any responses that aren't our own\r\n                    if (sender.id === BrowserHandler.runtime.id && message.close) {\r\n                        if (sender.tab && sender.tab.id) {\r\n                            BrowserHandler.tabs.remove(sender.tab.id);\r\n                        }\r\n                        delete message.close;\r\n                    }\r\n\r\n                    authorize(unpackStateParam(message)).then(() => {\r\n                        response();\r\n                    });\r\n\r\n                    return true;\r\n                }\r\n            case constants.ACTIVITY.REQUEST_TOKEN.NAME:\r\n                {\r\n                    navigateToAuthEndpoint(message.data.url, message.data.type, message.data.inIFrame).then(token => {\r\n                        response(token);\r\n                    });\r\n                    return true;\r\n                }\r\n            default:\r\n                {\r\n                    return;\r\n                }\r\n        }\r\n    }\r\n\r\n    // This module can be loaded by pages other than the background page so only\r\n    // handle these messages on the background page\r\n    if (Utilities.isBackgroundContext()) {\r\n        BrowserHandler.runtime.onMessage.addListener(authMessageListener);\r\n    }\r\n\r\n    async function acquireToken(userOrServiceType, endpoint, resource) {\r\n        var userService = {};\r\n        userService = await getServiceProvider(userOrServiceType);\r\n\r\n        if (!userService) {\r\n            $log.error('userService.acquireToken - Invalid type');\r\n            return Promise.reject('Invalid userType');\r\n        }\r\n\r\n        if (!resource && userService.getResourceForEndpoint) {\r\n            resource = userService.getResourceForEndpoint(endpoint);\r\n        }\r\n\r\n        var token = {};\r\n        try {\r\n            token = await getAccessToken(endpoint, resource);\r\n\r\n            // if found cached token for resource/scope and not expired, return it\r\n            if (token && token.access_token && !isTokenExpired(token.expires_on)) {\r\n                $log.debug(`Using cached token with resource:'${resource}'${endpoint ? ' for ' + endpoint : ''} `);\r\n                return token.access_token;\r\n            }\r\n\r\n            token = await requestAccessToken(userService, resource);\r\n\r\n            if (token) {\r\n                saveTokens(userService, endpoint, token);\r\n            } else {\r\n                return Promise.reject('No tokens available');\r\n            }\r\n        }\r\n        catch (reason) {\r\n            $log.error(`userService.acquireToken - failed. reason: ${reason}, userType: ${userOrServiceType}, endpoint: ${endpoint}, resource: ${resource}`);\r\n        }\r\n\r\n        if (!token || !token.access_token || !token.expires_on || isTokenExpired(token.expires_on)) {\r\n            return null;\r\n        }\r\n\r\n        return token.access_token;\r\n    }\r\n\r\n    function getFunctionName() {\r\n        var stack = Error().stack;\r\n        if (stack.length < 3) {\r\n            return;\r\n        }\r\n        var caller = stack.split('\\n')[2];\r\n        var match = caller.match(/^\\s*at\\s*(\\w*)/);\r\n        if (!match || match.length < 2) {\r\n            return;\r\n        }\r\n\r\n        return match[1];\r\n    }\r\n\r\n    async function httpRequest(request) {\r\n        if (!request) {\r\n            return Promise.reject('Invalid Request');\r\n        }\r\n\r\n        var stack = new Error().stack;\r\n        var result = new Promise((resolve, reject) => {\r\n            const $http = $injector.get('$http');\r\n\r\n            $http(request).then(\r\n                (response) => {\r\n                    resolve(response.data);\r\n                },\r\n                (response) => {\r\n                    reject(`httpRequest failed for url: ${request.url} reason: ${response.statusText} stack:\\n ${stack}`);\r\n                });\r\n\r\n        });\r\n\r\n        return (await result);\r\n    }\r\n\r\n    async function acquireTokenFromCode(userService, code) {\r\n        if (!userService) {\r\n            $log.error('userService.acquireTokenFromCode - Invalid type');\r\n            Promise.reject('Invalid userService type');\r\n            return;\r\n        }\r\n\r\n        var config = userService.getConfig();\r\n        config.params.grant_type = constants.OAUTH.AUTH_CODE;\r\n        config.params.code = code;\r\n\r\n        var request = {\r\n            method: 'POST',\r\n            url: config.tokenUrl,\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8'\r\n            },\r\n            data: (new URLSearchParams(config.params)).toString()\r\n        };\r\n\r\n        const accessToken = await httpRequest(request);\r\n        await saveTokens(userService, userService.getConfig().resource, accessToken);\r\n        // is all the above needed or would protectedResourceInterceptor call into acquireToken\r\n        // if the userType was just added to the header here?\r\n        await lookupUserInfo(userService, accessToken);\r\n        return accessToken.access_token;\r\n    }\r\n\r\n    async function getRefreshToken() {\r\n        return getIdentityProperty('refresh_token');\r\n    }\r\n\r\n    async function refreshAccessToken(userService, resource, refresh_token) {\r\n        if (!userService) {\r\n            $log.error('userService.refreshAccessToken - Invalid type');\r\n            return Promise.reject('Invalid userType');\r\n        }\r\n\r\n        var token = {};\r\n        var config = userService.getConfig();\r\n\r\n        config.params.grant_type = constants.OAUTH.REFRESH_TOKEN;\r\n        config.params.resource = resource;\r\n        config.params.refresh_token = refresh_token;\r\n\r\n        var request = {\r\n            method: 'POST',\r\n            url: config.tokenUrl,\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8',\r\n            },\r\n            data: (new URLSearchParams(config.params)).toString()\r\n        };\r\n\r\n        token = await httpRequest(request);\r\n        return token;\r\n    }\r\n\r\n    async function requestAccessToken(userService, resource) {\r\n        if (!userService) {\r\n            $log.error('userService.requestAccessToken - Invalid type');\r\n            return Promise.reject('Invalid userType');\r\n        }\r\n\r\n        // if there's a refresh token available (code grant only) attempt to renew it\r\n        // if there is no refresh token then it's an implicit flow which just attempts\r\n        // to get a new access token\r\n        const refreshToken = await getRefreshToken();\r\n        if (refreshToken) {\r\n            return refreshAccessToken(userService, resource, refreshToken);\r\n        }\r\n\r\n        const userType = await getUserType();\r\n        var userInfo = await getUserInfo(userType);\r\n        if (userService.requestAccessToken) {\r\n            var result = await userService.requestAccessToken(resource, userInfo);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    async function authorize(request) {\r\n        const serviceType = request.type;\r\n        var userType = undefined;\r\n        var userService = await getServiceProvider(serviceType);\r\n        var result = false;\r\n        if (!userService) {\r\n            $log.error('userService.authenticate - Invalid type');\r\n            return;\r\n        }\r\n\r\n        if (request.code) {\r\n            userType = serviceType.userType;\r\n            try {\r\n                var token = await acquireTokenFromCode(userService, request.code);\r\n                result = !!token;\r\n\r\n            }\r\n            catch (reason) {\r\n                if (userType === constants.USER_TYPE.O365) {\r\n                    notification.show(constants.NOTIFICATION.INVALIDSUBSCRIPTION);\r\n                }\r\n            }\r\n        } else {\r\n\r\n            if (request.id_token) {\r\n                userType = await setUserType(request.id_token);\r\n            }\r\n            if (request.access_token) {\r\n                await saveTokens(userService, userService.getConfig().userInfoUrl, request);\r\n                if (!userType) {\r\n                    userType = await getUserType();\r\n                }\r\n                await lookupUserInfo(userService, request.id_token);\r\n            }\r\n            result = userType !== constants.USER_TYPE.NONE;\r\n        }\r\n        if (request.error) {\r\n            if (request.error === 'interaction_required') {\r\n                login(await getUserType(), false);\r\n            } else {\r\n                $log.error(`userService.authenticate - authentication returned error: ${request.error} description: ${request.error_description} request: ${JSON.stringify(request)}`);\r\n            }\r\n        }\r\n\r\n        $log.trackEvent('Authorization', {'userType': userType, 'serviceType': serviceType, 'succeeded': result});\r\n        return result ? Promise.resolve() : Promise.reject();\r\n    }\r\n\r\n    async function clearToken() {\r\n        return Promise.all([\r\n            storage.remove('accessToken'),\r\n            storage.remove('refreshToken'),\r\n            storage.remove('userInfo'),\r\n            storage.remove('userType'),\r\n            storage.remove('identity'),\r\n        ]);\r\n    }\r\n\r\n    async function getLoginStatus() {\r\n        var result = await storage.get('userType');\r\n\r\n        if (!result.userType) {\r\n            return false;\r\n        }\r\n        try {\r\n            var accessToken = await acquireToken(result.userType);\r\n            return !!accessToken;\r\n        }\r\n        catch (reason) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async function isLoggedIn() {\r\n        var storageData = await storage.get(['userType', 'identity']);\r\n        return (storageData.identity && storageData.userType && storageData.userType !== constants.USER_TYPE.NONE /*&& result.accessToken*/);\r\n    }\r\n\r\n    async function getUserType() {\r\n        // Does this still need to be here? every telemetry call\r\n        // calls this which causes us to log back in again\r\n        /*\r\n        var status = await getLoginStatus();\r\n        if (!status) {\r\n            deferred.resolve(constants.USER_TYPE.NONE);\r\n            return deferred.promise;\r\n        }\r\n        */\r\n\r\n        var result = await storage.get('userType');\r\n        return result.userType || constants.USER_TYPE.NONE;\r\n    }\r\n\r\n    async function setUserType(typeOrToken) {\r\n        var userType = '';\r\n        if (Object.values(constants.USER_TYPE).includes(typeOrToken)) {\r\n            userType = typeOrToken;\r\n        } else {\r\n            var tenantInfo = resolveTypeAndTenant(typeOrToken);\r\n            userType = tenantInfo.type;\r\n            delete tenantInfo.type;\r\n\r\n            var tenantEntry = {\r\n                [userType]: tenantInfo\r\n            };\r\n\r\n            var identity = await getStoredIdentity();\r\n\r\n            mergeProperties(identity, tenantEntry);\r\n            await storage.set({identity});\r\n        }\r\n\r\n        if (userType !== constants.USER_TYPE.NONE) {\r\n            await storage.set({'userType': userType});\r\n        }\r\n\r\n        return userType;\r\n    }\r\n\r\n    function unpackStateParam(message) {\r\n        // separate the type from the state param\r\n        if (message.state) {\r\n            message.state = decodeURIComponent(message.state);\r\n        }\r\n        var [state, type, appid] = message.state.split('|');\r\n        if (type) {\r\n            message.type = type;\r\n        }\r\n\r\n        return message;\r\n    }\r\n\r\n    async function navigateToAuthEndpoint(url, type, inIFrame) {\r\n        return new Promise(async (resolve, reject) => {\r\n            if (!Utilities.isBackgroundContext()) {\r\n                BrowserHandler.runtime.sendMessage({activity: 'requestToken', data: {url: url, type: type, inIFrame: inIFrame}}, token => {\r\n                    resolve(token);\r\n                });\r\n            } else {\r\n                url = new URL(url);\r\n                const params = url.searchParams;\r\n                for (const param of ['state', 'nonce']) {\r\n                    var value = params.get(param);\r\n                    if (!value) {\r\n                        value = createGuid();\r\n                    }\r\n                    // append the type to ensure the same is used to handle the response\r\n                    if (param === 'state' && type) {\r\n                        value += '|' + type + '|' + constants.APPINFO_NAME;\r\n                    }\r\n\r\n                    params.set(param, value);\r\n                }\r\n\r\n                var frameId = undefined;\r\n                var timeout = undefined;\r\n                // eslint-disable-next-line no-inner-declarations\r\n                function cleanup() {\r\n                    BrowserHandler.runtime.onMessage.removeListener(listener);\r\n                    if (frameId) {\r\n                        var iframe = document.getElementById(frameId);\r\n                        if (iframe) {\r\n                            iframe.parentNode.removeChild(iframe);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // remember the state parameter to unsure the response has the same state\r\n                const state = params.get('state');\r\n                const scope = params.get('scope');\r\n\r\n                $log.info(`loading auth url:${url.href} ${inIFrame ? 'in iframe' : ''}`);\r\n                var info = await getUserInfo();\r\n                if (info && info.email && !params.has('login_hint')) {\r\n                    params.set('login_hint', info.email);\r\n                }\r\n\r\n                // eslint-disable-next-line no-inner-declarations\r\n                function listener(message, sender, response) {\r\n                    if (sender.id !== BrowserHandler.runtime.id) {\r\n                        $log.debug(`auth listener rejected invalid id: ${sender.id}`);\r\n                        return;\r\n                    }\r\n\r\n                    if (message.activity === constants.ACTIVITY.AUTHORIZATION.NAME) {\r\n                        var result = unpackStateParam(message);\r\n\r\n                        if (!result) {\r\n                            $log.error(`userService.listener - auth url:${url} returned null response `);\r\n                            reject(result);\r\n                        }\r\n\r\n                        if (result.state !== state) {\r\n                            $log.warn(`userService.listener - auth url:${url} mismatched state:${result.state}`);\r\n                        }\r\n\r\n                        $log[result.error ? 'error' : 'debug'](`userService.listener - auth response:${JSON.stringify(result)} received from url:${url}`);\r\n\r\n                        if (timeout) {\r\n                            clearTimeout(timeout);\r\n                        }\r\n\r\n                        delete result.activity;\r\n                        cleanup();\r\n                        resolve(result);\r\n                    }\r\n                }\r\n                BrowserHandler.runtime.onMessage.addListener(listener);\r\n\r\n                if (!inIFrame) {\r\n                    BrowserHandler.tabs.create({url: url.toString()});\r\n                } else {\r\n                    params.set('prompt', 'none');\r\n                    frameId = 'authFrame!' + scope;\r\n\r\n                    const iframeAuthDelay = 60000;\r\n                    timeout = setTimeout(() => {\r\n                        $log.warn(`userService.authInFrame timed out waiting for ${url.toString()} after ${iframeAuthDelay} ms`);\r\n                        cleanup();\r\n                        reject('Timed out waiting for response from iFrame');\r\n                    }, iframeAuthDelay);\r\n\r\n                    var iframe = document.getElementById(frameId);\r\n                    if (!iframe) {\r\n                        iframe = document.createElement('iframe');\r\n                        iframe.setAttribute('id', frameId);\r\n                        iframe.style.visibility = \"hidden\";\r\n                        iframe.style.position = \"absolute\";\r\n                        iframe.style.width = iframe.style.height = \"0\";\r\n                        iframe.style.border = \"0\";\r\n                        iframe.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin allow-forms\");\r\n\r\n                        document.body.appendChild(iframe);\r\n                        iframe.src = url.toString();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    async function login(userType, clear = true) {\r\n        if (clear === true) {\r\n            clearToken();\r\n        }\r\n\r\n        var userService = await getServiceProvider(userType);\r\n        if (userService.handleLogin) {\r\n            return userService.handleLogin();\r\n        }\r\n\r\n        const config = userService.getConfig();\r\n        var loginUrl = config['loginUrl'];\r\n        if (!loginUrl) {\r\n            $log.error('userService.login - Invalid type');\r\n            return;\r\n        }\r\n\r\n        return navigateToAuthEndpoint(loginUrl, userService.type);\r\n    }\r\n\r\n    async function logout() {\r\n        const userType = await getUserType();\r\n        var userService = await getServiceProvider(userType);\r\n        clearToken();\r\n        if (userService.handleLogout) {\r\n            await userService.handleLogout();\r\n        } else {\r\n            const config = userService.getConfig();\r\n            var logoutUrl = config['logoutUrl'];\r\n            if (!logoutUrl) {\r\n                $log.error('userService.logout - Invalid type');\r\n                return;\r\n            }\r\n\r\n            var request = {\r\n                method: 'GET',\r\n                url: logoutUrl\r\n            };\r\n\r\n            await httpRequest(request);\r\n        }\r\n\r\n        $log.debug(`userService.logout - ${userType}`);\r\n    }\r\n\r\n    async function getDeviceId() {\r\n        var result = await storage.get('deviceId');\r\n        if (result.deviceId) {\r\n            return result.deviceId;\r\n        }\r\n\r\n        var id = createGuid();\r\n        await storage.set({'deviceId': id});\r\n        return id;\r\n    }\r\n\r\n    async function useAuthNext(toggle) {\r\n        if (typeof toggle !== 'undefined') {\r\n            storage.set({'authNext': {override: toggle}});\r\n        }\r\n\r\n        return checkAuthFlighting({noLogout: true});\r\n    }\r\n\r\n    window.useAuthNext = useAuthNext;\r\n    window.checkTransitionAuth = checkAuthFlighting;\r\n\r\n    // only check once a day\r\n    const transitionAuthInterval = 24 /*hours*/ * 3600 /*seconds per hour*/ * 1000/* millseconds per second*/;\r\n\r\n    async function initCheckTransition() {\r\n        $log.debug('initCheckTransition');\r\n        //check now before setting interval\r\n        await checkAuthFlighting();\r\n        // set the recurring interval to perform the check\r\n        setInterval(checkAuthFlighting, transitionAuthInterval);\r\n    }\r\n\r\n    if (Utilities.isBackgroundContext()) {\r\n        initCheckTransition();\r\n    }\r\n\r\n    async function checkAuthFlighting(options) {\r\n        var now = new Date();\r\n        const checkedTime = now.toUTCString();\r\n        var storageData = await storage.get('authNext');\r\n        now = Math.round(now / 1000);\r\n        var elapsed = 0;\r\n        if (storageData.authNext && storageData.authNext.lastCheck && Utilities.isNotUndefinedOrNull(storageData.authNext.flighted)) {\r\n            elapsed = now - storageData.authNext.lastCheck;\r\n\r\n            if (!(options && options.force === true) && elapsed < transitionAuthInterval && storageData.authNext.flighted) {\r\n                return storageData.authNext.flighted;\r\n            }\r\n        }\r\n\r\n        $log.info(`checkTransitionAuth time:${checkedTime}`);\r\n\r\n        var authNext = await (async () => {\r\n            // Guidance from service is to use deviceId as userId since the userId isn't\r\n            // always available, and would change if they login with a different account.\r\n            // X_UserId needs to be consistent so they don't jump flights but\r\n            // X_CorrelationId isn't required\r\n            const editorService = FlightingUrl;\r\n            var deviceId = await getDeviceId();\r\n            var request = {\r\n                url: editorService,\r\n                method: 'POST',\r\n                accept: 'application/json',\r\n                contentType: 'application/json',\r\n                headers: {\r\n                    // 'X-CorrelationId': deviceId,\r\n                    'X-UserId': deviceId\r\n                },\r\n                data: {\r\n                    AppId: \"OfficeBX_Online\"\r\n                }\r\n            };\r\n\r\n            var result = {};\r\n            try {\r\n                result = await httpRequest(request);\r\n            } catch (error) {\r\n                // eslint-disable-next-line no-debugger\r\n                debugger;\r\n                $log.error(`userService.checkAuthFlighting - Call to editor service failed. error:${JSON.stringify(error)}`);\r\n            }\r\n\r\n            var enabled = false;\r\n            if (result && result.FeatureFlags && result.FeatureFlags.authNext) {\r\n                var authNext = result.FeatureFlags.authNext;\r\n                enabled = typeof authNext === 'string' ? authNext.toLowerCase() === 'true' : !!authNext;\r\n            }\r\n\r\n            $log.info(`editor featureFlags.authNext returned:${enabled}`);\r\n            return enabled;\r\n        })();\r\n\r\n        await storage.set({'authNext': {flighted: authNext, 'lastCheck': now}});\r\n\r\n        // check the override last so the flighting service will still get called as usual\r\n        if (storageData.authNext && Utilities.isNotUndefinedOrNull(storageData.authNext.override)) {\r\n            $log.info(`using authNext override from local storage.`);\r\n            return storageData.authNext.override;\r\n        }\r\n\r\n        var serviceType = await getIdentityProperty('service');\r\n        if (authNext === (serviceType === constants.USER_SERVICE_TYPE.MSID)) {\r\n            // current serviceType and authNext match so return with no change\r\n            return;\r\n        }\r\n\r\n        $log.trackEvent('AuthNext', {elapsed, authNext, serviceType});\r\n\r\n        // logout to force user to login with correct flighted auth\r\n        if (options && !options.noLogout) {\r\n            await logout();\r\n        }\r\n    }\r\n\r\n    async function getLastAuthCheck() {\r\n        if (!window.lastAuthFlightCheck) {\r\n            var result = await storage.get('authNext');\r\n            if (result.lastCheck) {\r\n                window.lastAuthFlightCheck = result.lastCheck;\r\n            }\r\n        }\r\n        return window.lastAuthFlightCheck;\r\n    }\r\n\r\n\r\n    async function getServiceForUserType(userType) {\r\n        // if one serviceType was responsible for logged in identity return it\r\n        var serviceType = await getIdentityProperty('service', userType);\r\n        if (serviceType) {\r\n            return serviceType;\r\n        }\r\n\r\n        // otherwise determine which to use\r\n        serviceType = constants.USER_SERVICE_TYPE.NONE;\r\n        if (await useAuthNext()) {\r\n            return constants.USER_SERVICE_TYPE.MSID;\r\n        }\r\n\r\n        switch (userType) {\r\n            case constants.USER_TYPE.MSA:\r\n                serviceType = constants.USER_SERVICE_TYPE.MSA;\r\n                break;\r\n            case constants.USER_TYPE.O365:\r\n                serviceType = constants.USER_SERVICE_TYPE.O365;\r\n                break;\r\n        }\r\n        return serviceType;\r\n    }\r\n\r\n    async function getServiceProvider(type) {\r\n        var userServiceProvider = null;\r\n        if (!Object.values(constants.USER_SERVICE_TYPE).includes(type)) {\r\n            type = await getServiceForUserType(type);\r\n        }\r\n        // Determine which user service to use and inject\r\n        if (type.indexOf(constants.USER_SERVICE_TYPE.MSA) !== -1) {\r\n            userServiceProvider = msaUserService;\r\n        } else if (type.indexOf(constants.USER_SERVICE_TYPE.O365) !== -1) {\r\n            userServiceProvider = o365UserService;\r\n        } else if (type.indexOf(constants.USER_SERVICE_TYPE.MSID) !== -1) {\r\n            userServiceProvider = msidUserService;\r\n        } else {\r\n            // eslint-disable-next-line no-debugger\r\n            debugger;\r\n            $log.error(`userService.getServiceProvider - Invalid type - ${type}`);\r\n        }\r\n\r\n        return userServiceProvider;\r\n    }\r\n\r\n    async function getStoredIdentity() {\r\n        var result = await storage.get('identity');\r\n        return (result && result.identity) ? result.identity : {};\r\n    }\r\n\r\n    function mergeProperties(target, source) {\r\n        for (var [key, sourceValue] of Object.entries(source)) {\r\n            if (!sourceValue) {\r\n                continue;\r\n            }\r\n\r\n            if (!target[key] || target[key] === \"none\" || sourceValue === \"none\") {\r\n                target[key] = sourceValue;\r\n                continue;\r\n            }\r\n\r\n            if (typeof sourceValue !== typeof target[key]) {\r\n                $log.warn(`skipping ${key} due to conflicting types`);\r\n                continue;\r\n            }\r\n\r\n            if (Array.isArray(sourceValue)) {\r\n                sourceValue.forEach((value) => {\r\n                    var index = target[key].indexOf(value);\r\n                    if (index < 0) {\r\n                        target[key].push(value);\r\n                    }\r\n                });\r\n\r\n                continue;\r\n            }\r\n\r\n            if (typeof sourceValue === 'object') {\r\n\r\n                mergeProperties(target[key], sourceValue);\r\n                continue;\r\n            }\r\n            target[key] = sourceValue;\r\n        }\r\n    }\r\n\r\n    function resolveTypeAndTenant(tokenData) {\r\n        var scopes = tokenData.scopes || tokenData.scope;\r\n        if (scopes && scopes.includes('wl.')) {\r\n            return {type: constants.USER_TYPE.MSA};\r\n        }\r\n        var idToken = tokenData.id_token || tokenData;\r\n        if (!idToken) {\r\n            return {type: constants.USER_TYPE.NONE};\r\n        }\r\n\r\n        const tenants = {\r\n            '9188040d-6c67-4c5b-b112-36a304b66dad': {\r\n                'type': constants.USER_TYPE.MSA, 'audience': 'prod'\r\n            },\r\n            '4925308c-f164-4d2d-bc7e-0631132e9375': {\r\n                'type': constants.USER_TYPE.MSA, 'audience': 'ppe'\r\n            },\r\n            '72f988bf-86f1-41af-91ab-2d7cd011db47': {\r\n                'type': constants.USER_TYPE.O365, 'audience': 'prod', 'domain': 'microsoft.com'\r\n            },\r\n            'f686d426-8d16-42db-81b7-ab578e110ccd': {\r\n                'type': constants.USER_TYPE.O365, 'audience': 'ppe', 'domain': 'microsoft.com'\r\n            }\r\n        };\r\n\r\n        try {\r\n            const {header, payload} = parseJwtToken(idToken);\r\n            var result = {['tenant']: payload.tid};\r\n            if (tenants.hasOwnProperty(result.tenant)) {\r\n                var tenantInfo = tenants[result.tenant];\r\n                result = Object.assign(result, tenantInfo);\r\n            } else {\r\n                // everything not included in tenants would be AAD\r\n                result.type = constants.USER_TYPE.O365;\r\n            }\r\n\r\n            return result;\r\n        }\r\n        catch (error) {\r\n            // If it wasn't parsable then it must be an MSA\r\n            return {type: constants.USER_TYPE.MSA};\r\n        }\r\n    }\r\n\r\n    function getEndpointBase(endpoint) {\r\n        const url = new URL(endpoint);\r\n        return url.origin;\r\n    }\r\n\r\n    async function saveTokens(userService, endpoint, tokenData) {\r\n        if (tokenData.expires_in && !tokenData.expires_on) {\r\n            tokenData.expires_on = Utilities.getCurrentTime() + Number(tokenData.expires_in);\r\n        }\r\n\r\n        if (!endpoint) {\r\n            $log.error('userService.saveTokens - endpoint not provided');\r\n            return;\r\n        }\r\n\r\n        var userType = await getUserType();\r\n        if (userType === constants.USER_TYPE.NONE) {\r\n            userType = await setUserType(tokenData);\r\n        }\r\n\r\n        if (userType === constants.USER_TYPE.NONE) {\r\n            $log.error('userService.saveTokens - unable to resolve userType');\r\n            return;\r\n        }\r\n\r\n        var scope = decodeURIComponent(tokenData.scope).toLowerCase().split(/[ +]/);\r\n\r\n        // if one of the scopes contains a url, then it is the actual endpoint\r\n        for (const item of scope) {\r\n            var result = item.match(/(^https:\\/\\/[.\\w]*(?:\\S+\\/))/i);\r\n            if (result) {\r\n                endpoint = result[result.index];\r\n                break;\r\n            }\r\n        }\r\n        endpoint = getEndpointBase(endpoint);\r\n        if (tokenData.resource && tokenData.resource !== endpoint) {\r\n            $log.info(`saveTokens ${endpoint} does not match ${tokenData.resource}`);\r\n            endpoint = tokenData.resource;\r\n        }\r\n\r\n        var tokenEntry = {\r\n            [userType]: {\r\n                \"id_token\": tokenData.id_token,\r\n                \"refresh_token\": tokenData.refresh_token,\r\n                \"service\": userService.type,\r\n                \"resources\": {\r\n                    [endpoint]: {\r\n                        \"access_token\": tokenData.access_token,\r\n                        \"expires_in\": tokenData.expires_in,\r\n                        \"expires_on\": tokenData.expires_on,\r\n                        \"scope\": scope\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        var identity = await getStoredIdentity();\r\n\r\n        mergeProperties(identity, tokenEntry);\r\n        await storage.set({identity});\r\n    }\r\n\r\n    function supportsScopes(required, granted) {\r\n        if (!required) {\r\n            return true;\r\n        }\r\n\r\n        if (!granted) {\r\n            return false;\r\n        }\r\n\r\n        if (!Array.isArray(required)) {\r\n            required = required.toLowerCase().split(/[ +]/);\r\n        }\r\n\r\n        for (const scope of required) {\r\n            if (!granted.includes(scope)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    async function getAccessToken(endpoint, resourceScope) {\r\n        if (!endpoint) {\r\n            $log.error('userService.getAccessToken - endpoint not provided');\r\n            return;\r\n        }\r\n\r\n        endpoint = getEndpointBase(endpoint);\r\n\r\n        try {\r\n            var allTokens = await getIdentityProperty('resources');\r\n\r\n            // either specifically by name or the first one if there is no entry for the endpoint\r\n            if (allTokens[endpoint]) {\r\n\r\n                var tokenData = allTokens[endpoint];\r\n                // if the resource is the same as the endpoint as in the case of legacy auth,\r\n                // no reason to validate the scopes. just return it\r\n                if (endpoint === resourceScope) {\r\n                    return tokenData;\r\n                }\r\n\r\n                if (tokenData && supportsScopes(resourceScope, tokenData.scope)) {\r\n                    return tokenData;\r\n                }\r\n\r\n                // remove it from the array so it's not checked again below\r\n                delete allTokens[endpoint];\r\n            }\r\n\r\n            // in case the token data was stored under a different endpoint, try to find the appropriate\r\n            // scopes stored under other scopes\r\n            for (const token in allTokens) {\r\n                if (supportsScopes(resourceScope, token.scope)) {\r\n                    return token;\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n        catch (error) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    async function getUserInfo(userType) {\r\n        return getIdentityProperty('userInfo', userType);\r\n    }\r\n\r\n    async function getIdentityProperty(property, userType) {\r\n        if (!userType) {\r\n            userType = await getUserType();\r\n        }\r\n\r\n        var identity = await getStoredIdentity();\r\n\r\n        if (!identity[userType] || !identity[userType][property]) {\r\n            return null;\r\n        }\r\n\r\n        return identity[userType][property];\r\n    }\r\n\r\n    // Waits for the userInfo to be available (non-null) before resolving\r\n    async function waitForUserInfo(userType) {\r\n        return new Promise(async (resolve) => {\r\n            var userInfo = await getUserInfo(userType);\r\n            // userInfo is available => resolve\r\n            if (Utilities.isNotUndefinedOrNull(userInfo)) {\r\n                return resolve(userInfo);\r\n            }\r\n\r\n            BrowserHandler.runtime.onMessage.addListener(userInfoListener);\r\n\r\n            // in testing mode, only wait for a short time before giving up on getting the userInfo so as not to slow down unit tests too much\r\n            var giveUpDelay = Utilities.isExtensionInTestingMode() ? constants.TIMEOUT.USER_INFO_LOOKUP_TEST : constants.TIMEOUT.USER_INFO_LOOKUP;\r\n\r\n            // if looking up the userInfo takes too long, resolve with the current userInfo (undefined or null)\r\n            var giveUp = setTimeout(() => {\r\n                $log.warn(`userService.waitForUserInfo timed out after ${constants.TIMEOUT.USER_INFO_LOOKUP} ms - ${userType}`);\r\n                cleanUp();\r\n                resolve(userInfo);\r\n            }, giveUpDelay);\r\n\r\n            // listen for a runtime message that is sent when the userInfo is available from lookupUserInfo\r\n            function userInfoListener(request) {\r\n                if (request.activity === constants.ACTIVITY.USERINFO_AVAILABLE.NAME) {\r\n                    cleanUp();\r\n                    clearTimeout(giveUp);\r\n                    resolve(request.data);\r\n                }\r\n            }\r\n\r\n            function cleanUp() {\r\n                BrowserHandler.runtime.onMessage.removeListener(userInfoListener);\r\n            }\r\n        });\r\n    }\r\n\r\n    async function saveUserInfo(userType, data, replace) {\r\n\r\n        var identity = await getStoredIdentity();\r\n\r\n        var userInfo = {};\r\n        if (identity[userType] && identity[userType].userInfo && !replace) {\r\n            userInfo = identity[userType].userInfo;\r\n        }\r\n\r\n        mergeProperties(userInfo, data);\r\n\r\n        if (identity[userType]) {\r\n            identity[userType].userInfo = userInfo;\r\n            await storage.set({identity});\r\n        }\r\n    }\r\n\r\n    function isTokenExpired(expiresOn) {\r\n        var now = Utilities.getCurrentTime();\r\n        var offset = 120;\r\n        return expiresOn && expiresOn > now + offset ? false : true;\r\n    }\r\n\r\n    async function lookupUserInfo(userService, tokenData) {\r\n        var userType = await getUserType();\r\n\r\n        var userInfo = await userService.lookupUserInfo(tokenData);\r\n        // send a message (listened to in waitForUserInfo) with the newly available userInfo\r\n        BrowserHandler.runtime.sendMessage({activity: constants.ACTIVITY.USERINFO_AVAILABLE.NAME, data: userInfo});\r\n        // save the userInfo to local storage\r\n        if (!userInfo.email && userInfo.userPrincipalName) {\r\n            userInfo.email = userInfo.userPrincipalName;\r\n        }\r\n\r\n        await saveUserInfo(userType, userInfo, true);\r\n\r\n        // get user's profile photo\r\n        await getPhotoFromServer(userService);\r\n    }\r\n\r\n    // TODO: consolidate with o365User once we have WebPack\r\n    function parseJwtToken(token) {\r\n        var idTokenPartsRegex = /^([^.\\s]*)\\.([^.\\s]+)\\.([^.\\s]*)$/;\r\n\r\n        var matches = idTokenPartsRegex.exec(token);\r\n        if (!matches || matches.length < 4) {\r\n            $log.error('userService.parseJwtToken - The returned id_token is not parseable.');\r\n            return null;\r\n        }\r\n\r\n        var header = JSON.parse(base64DecodeStringUrlSafe(matches[1]));\r\n        var payload = JSON.parse(base64DecodeStringUrlSafe(matches[2]));\r\n        return {header, payload};\r\n    }\r\n\r\n    function base64DecodeStringUrlSafe(base64IdToken) {\r\n        base64IdToken = base64IdToken.replace(/-/g, '+').replace(/_/g, '/');\r\n        return decodeURIComponent(escape(window.atob(base64IdToken)));\r\n    }\r\n\r\n    // Gets the user's photo (profile picture) from either local storage or an http call\r\n    // Calls the helper functions attached to the service (getUserType, getUserInfo, getPhotoFromServer) to allow for mocking in UTs\r\n    async function getUserPhoto() {\r\n        var userType = await getUserType();\r\n        // Invalid user type - no photo\r\n        if (userType === constants.USER_TYPE.NONE) {\r\n            $log.warn('UserService.getUserPhoto: no signed-in user');\r\n            return Promise.reject(constants.RECENTS.ERROR.UNSUPPORTED_USER_TYPE);\r\n        }\r\n\r\n        var userInfo = await getUserInfo(userType);\r\n        // If there is a photo in local storage, use that\r\n        if (userInfo && userInfo.photo) {\r\n            $log.trackEvent('UserService_GotLocalPhoto', {'userType': userType});\r\n            return userInfo.photo;\r\n        }\r\n\r\n        // No local photo - Do not retry to fetch the photo from server, use the default photo instead.\r\n        return Promise.reject('No photo in local storage');\r\n    }\r\n\r\n    // Gets the user's photo from the appropriate endpoint based on the given userType\r\n    async function getPhotoFromServer(userService) {\r\n        const serviceType = userService.type;\r\n        const userType = await getUserType();\r\n        const config = userService.getConfig();\r\n        var photoUrl = config['photoUrl'];\r\n        if (!photoUrl) {\r\n            return;\r\n        }\r\n\r\n        // Request to get photo\r\n        var photoRequest = {\r\n            method: 'GET',\r\n            url: photoUrl,\r\n            responseType: 'blob',\r\n            headers: {\r\n                'X-UserType': serviceType\r\n            }\r\n        };\r\n\r\n        // Send photo request\r\n        try {\r\n            const photo = await httpRequest(photoRequest);\r\n            $log.trackEvent('UserService_GotServerPhoto', {'userType': userType});\r\n\r\n            // Convert the photo response into a displayable string source\r\n            var reader = new FileReader();\r\n            reader.onload = async () => {\r\n\r\n                // Save the photo in the userInfo in local storage\r\n                saveUserInfo(userType, {photo: reader.result});\r\n\r\n                return reader.result;\r\n            };\r\n            reader.readAsDataURL(photo);\r\n        }\r\n        catch (error) {\r\n            return null;\r\n        }\r\n\r\n    }\r\n\r\n    async function getEndpointUrlForCurrentUser(endpoint) {\r\n        const userType = await getUserType();\r\n        if (!userType || userType === constants.USER_TYPE.NONE) {\r\n            return null;\r\n        }\r\n        var userService = await getServiceProvider(userType);\r\n        if (!userService) {\r\n            return null;\r\n        }\r\n\r\n        const config = userService.getConfig();\r\n        return config[endpoint];\r\n    }\r\n\r\n    function createGuid() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (char) {\r\n            let timestamp = performance.now();\r\n            const rand = (timestamp + Math.random() * 16) % 16 | 0;\r\n            timestamp = Math.floor(timestamp / 16);\r\n            return (char === 'x' ? rand : (rand & 0x3 | 0x8)).toString(16);\r\n        });\r\n    }\r\n\r\n    async function getUserLicenseInfo() {\r\n        var userInfo = await getUserInfo();\r\n        const licenseProps = ['driveQuota', 'licenses'];\r\n        return licenseProps.reduce((previous, current) => {\r\n            if (userInfo[current]) {\r\n                previous[current] = userInfo[current];\r\n            }\r\n            return previous;\r\n        }, {});\r\n    }\r\n\r\n    // all exports are async\r\n    return {\r\n        acquireToken,\r\n        clearToken,\r\n        isLoggedIn,\r\n        getEndpointUrlForCurrentUser,\r\n        getUserType,\r\n        getUserInfo,\r\n        getUserPhoto,\r\n        httpRequest,\r\n        navigateToAuthEndpoint,\r\n        saveUserInfo,\r\n        waitForUserInfo,\r\n        getUserLicenseInfo,\r\n        useAuthNext,\r\n        // Exposed to be called from UTs\r\n        authorize,\r\n        getAccessToken,\r\n        getPhotoFromServer,\r\n        login,\r\n        logout,\r\n        lookupUserInfo,\r\n    };\r\n}\r\n","import Utilities from '../common/utilities';\r\nimport constants from '../common/constants';\r\n\r\nexport default mruService;\r\n\r\nfunction mruService($q, $log, $http, userService) {\r\n    // Gets the most recent documents list from either OneDrive or o365\r\n    async function getRecentDocumentList() {\r\n        const userType = await userService.getUserType();\r\n        if (userType === constants.USER_TYPE.NONE) {\r\n            return Promise.reject(constants.RECENTS.ERROR.UNSUPPORTED_USER_TYPE);\r\n        }\r\n        const documentsUrl = await userService.getEndpointUrlForCurrentUser('documentsUrl');\r\n        var recentDocs = await getRecentDocs(userType, documentsUrl);\r\n        await mergeSharedDocs(userType, recentDocs);\r\n        return normalizeMruList(recentDocs.data || recentDocs.value || recentDocs);\r\n    }\r\n\r\n    // Calls into the appropriate endpoint to retrieve the recent documents\r\n    async function getRecentDocs(userType, endpointUrl) {\r\n        return new Promise((resolve, reject) => {\r\n            var request = {\r\n                method: 'GET',\r\n                accept: 'application/json',\r\n                url: endpointUrl,\r\n                contentType: 'application/json',\r\n                headers: {\r\n                    'X-UserType': userType\r\n                }\r\n            };\r\n\r\n            $http(request).then(\r\n                function (response) {\r\n                    resolve(response.data);\r\n                },\r\n                function () {\r\n                    reject(constants.RECENTS.ERROR.GENERIC);\r\n                });\r\n        });\r\n    }\r\n\r\n    async function getOneDriveItem(userType, itemId) {\r\n        var request = {\r\n            method: 'GET',\r\n            accept: 'application/json',\r\n            url: `https://graph.microsoft.com/v1.0/me/drive/items/${itemId}`,\r\n            contentType: 'application/json',\r\n            headers: {\r\n                'X-UserType': userType\r\n            }\r\n        };\r\n        try {\r\n            return new Promise(resolve => {\r\n                $http(request)\r\n                    .then(function (response) {\r\n                        resolve(response.data);\r\n                    });\r\n            });\r\n        }\r\n        catch (_) {\r\n            return Promise.resolve({});\r\n        }\r\n    }\r\n\r\n    async function getOneDriveSharedItems(userType) {\r\n        var request = {\r\n            method: 'GET',\r\n            accept: 'application/json',\r\n            url: 'https://graph.microsoft.com/v1.0/me/drive/sharedWithMe',\r\n            contentType: 'application/json',\r\n            headers: {\r\n                'X-UserType': userType,\r\n            },\r\n        };\r\n        return new Promise(resolve => {\r\n            try {\r\n                $http(request)\r\n                    .then(function (response) {\r\n                        resolve(response.data);\r\n                    });\r\n            }\r\n            catch (_) {\r\n                resolve({});\r\n            }\r\n        });\r\n    }\r\n\r\n    // When using msa msgraph, recent docs doesn't include the necessary\r\n    // metadata needed to sort and access the files, so we have to get the\r\n    // documents shared with the person to look up the info for any shared\r\n    // documents and then each individual id for those owned by the person\r\n    async function mergeSharedDocs(userType, recentDocs) {\r\n        if (!recentDocs.value) {\r\n            return;\r\n        }\r\n\r\n        var sharedItems = undefined;\r\n        for (var recent of recentDocs.value) {\r\n            if (Object.values(recent.remoteItem).length) {\r\n                continue;\r\n            }\r\n\r\n            // only make this call if any of the recent docs\r\n            // don't have the remoteItem data\r\n            if (!sharedItems) {\r\n                var result = await getOneDriveSharedItems(userType);\r\n                if (!result.value) {\r\n                    return;\r\n                }\r\n                sharedItems = result.value;\r\n            }\r\n\r\n            var shared = sharedItems.find((value) => {\r\n                return value.remoteItem && value.remoteItem.id && value.remoteItem.id.toLowerCase() === recent.id.toLowerCase();\r\n            });\r\n\r\n            if (shared) {\r\n                recent.remoteItem = shared.remoteItem;\r\n                continue;\r\n            }\r\n\r\n            var item;\r\n            try {\r\n                item = await getOneDriveItem(userType, recent.id);\r\n            } catch (_) {\r\n                continue;\r\n            }\r\n\r\n            if (!item || !item.id) {\r\n                continue;\r\n            }\r\n\r\n            recent.remoteItem.webUrl = item.webUrl;\r\n            recent.name = item.name;\r\n            if (!recent.file) {\r\n                recent.file = item.file;\r\n            }\r\n            if (!recent.remoteItem.package) {\r\n                recent.remoteItem.package = item.package;\r\n            }\r\n            if (!recent.remoteItem.lastModifiedDateTime) {\r\n                recent.remoteItem.lastModifiedDateTime = item.lastModifiedDateTime;\r\n            }\r\n        }\r\n    }\r\n\r\n    const supportedMimeType = {\r\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document': 'word',\r\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': 'excel',\r\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation': 'powerpoint',\r\n        'application/msonenote': 'onenote'\r\n    };\r\n\r\n    // Helper function to normalize the MRU list to be in the form of the JSON returned by MRU++ (with just the values we use)\r\n    // TODO: Once we use MRU++ for both services, we won't need this any longer\r\n    function normalizeMruList(fileList) {\r\n        var newFileList = [];\r\n        if (Utilities.isUndefinedOrNull(fileList)) {\r\n            return newFileList;\r\n        }\r\n\r\n        for (const entry of fileList) {\r\n            // if it's already got the correct metadata just add it and continue\r\n            if (entry.DocumentUrl && entry.Timestamp && entry.Application && entry.FileName/* && entry.Id*/) {\r\n                newFileList.push(entry);\r\n                continue;\r\n            }\r\n\r\n            // if it doesn't have the other known fields, then move along to the next\r\n            if (!entry.remoteItem) {\r\n                continue;\r\n            }\r\n\r\n            const fileName = entry.name || entry.remoteItem.name;\r\n            const id = entry.id || entry.remoteItem.id;\r\n            if (!fileName || !id) {\r\n                continue;\r\n            }\r\n\r\n            var remoteItem = entry.remoteItem;\r\n            var documentUrl = undefined;\r\n            var timestamp = undefined;\r\n            var application = undefined;\r\n            if (remoteItem.mru) {\r\n                var mruItem = remoteItem.mru;\r\n                if (mruItem.app && constants.FILE.SUPPORTED_APPLICATIONS.indexOf(mruItem.app) !== -1) {\r\n                    documentUrl = mruItem.url;\r\n                    timestamp = mruItem.timeStamp;\r\n                    application = mruItem.app.toLowerCase();\r\n                }\r\n            }\r\n            else {\r\n                // look in other known locations for url\r\n                documentUrl = remoteItem.webDavUrl || remoteItem.webUrl;\r\n                if (!documentUrl) {\r\n                    continue;\r\n                }\r\n\r\n                const supportedExtensions = constants.FILE.SUPPORTED_FILE_TYPES;\r\n                var ext = Utilities.getFileExtension(documentUrl) || Utilities.getFileExtension(fileName);\r\n                if (supportedExtensions.hasOwnProperty(ext)) {\r\n                    application = supportedExtensions[ext];\r\n                } else if (remoteItem.file && remoteItem.file.mimeType && supportedMimeType.hasOwnProperty(remoteItem.file.mimeType)) {\r\n                    application = supportedMimeType[remoteItem.file.mimeType];\r\n                } else if (!application) {\r\n                    var packageInfo = remoteItem.package || entry.package;\r\n                    if (!packageInfo || !packageInfo.type) {\r\n                        continue;\r\n                    }\r\n                    application = packageInfo.type.toLowerCase();\r\n                    if (!Object.values(supportedExtensions).includes(application)) {\r\n                        continue;\r\n                    }\r\n                }\r\n                if (!application) {\r\n                    continue;\r\n                }\r\n\r\n                if (remoteItem.lastModifiedDateTime) {\r\n                    timestamp = remoteItem.lastModifiedDateTime;\r\n                } else if (remoteItem.fileSystemInfo) {\r\n                    timestamp = remoteItem.fileSystemInfo.lastAccessedDateTime || remoteItem.fileSystemInfo.lastModifiedDateTime;\r\n                }\r\n\r\n                if (!timestamp) {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            newFileList.push({\r\n                DocumentUrl: documentUrl,\r\n                Timestamp: timestamp,\r\n                Application: application,\r\n                FileName: fileName,\r\n                Id: id\r\n            });\r\n        }\r\n        return newFileList;\r\n    }\r\n\r\n    var service = {\r\n        getRecentDocumentList: getRecentDocumentList,\r\n\r\n        // Exposed to be called from UTs\r\n        getRecentDocs: getRecentDocs,\r\n        normalizeMruList: normalizeMruList,\r\n    };\r\n\r\n    return service;\r\n}\r\n","import Utilities from '../common/utilities';\r\nimport './mru.service';\r\nimport constants from '../common/constants';\r\n\r\nexport default mruController;\r\n\r\nfunction mruController($scope, $q, $log, storage, mruService) {\r\n    var self = this;\r\n\r\n    // Exposed methods\r\n    self.onLoad = onLoad;\r\n    self.openRecentDocument = openRecentDocument;\r\n\r\n    // Exposed properties\r\n    self.constants = constants;\r\n    self.storage = storage;\r\n    self.currentDisplayPanel = self.constants.RECENTS.DISPLAY_PANEL.LOADING;\r\n    self.recentDocuments = [];\r\n    self.LIST_LENGTH = self.constants.RECENTS.LIST_LENGTH_MSA;\r\n\r\n    function onLoad() {\r\n        $log.debug('Loading MruController');\r\n        // Set to the loading message while we fetch the documents\r\n        self.currentDisplayPanel = self.constants.RECENTS.DISPLAY_PANEL.LOADING;\r\n\r\n        // Pull cached list of recent documents UX info\r\n        self.getRecentDocumentsFromStorage().then(function (docList) {\r\n            if (!Utilities.isUndefinedOrNull(docList) && docList.length > 0) {\r\n                // We got some recents, so show them\r\n                self.recentDocuments = docList;\r\n                self.currentDisplayPanel = self.constants.RECENTS.DISPLAY_PANEL.LIST;\r\n            }\r\n        });\r\n    }\r\n\r\n    $scope.$watch('userType', function (userType) {\r\n        if (userType === self.constants.USER_TYPE.NONE) {\r\n            return;\r\n        }\r\n\r\n        self.LIST_LENGTH = userType === self.constants.USER_TYPE.O365 ? self.constants.RECENTS.LIST_LENGTH_O365 : self.constants.RECENTS.LIST_LENGTH_MSA;\r\n\r\n        // Refresh the list\r\n        self.refreshRecentDocumentsList().then(function () {\r\n            // If there are some documents in the list already (from storage), then display them\r\n            // Otherwise, we didn't find any and just display the no documents message\r\n            self.currentDisplayPanel = (!Utilities.isUndefinedOrNull(self.recentDocuments) && self.recentDocuments.length > 0) ?\r\n                self.constants.RECENTS.DISPLAY_PANEL.LIST : self.constants.RECENTS.DISPLAY_PANEL.NO_DOCS;\r\n        },\r\n            function (error) {\r\n                $log.debug(`MruController $scope.$watch error on refreshRecentDocumentsList: ${error}`);\r\n\r\n                // If we receive an error AND we don't have any cached documents, we'll show an error message\r\n                // This is better than giving the impression the user documents are now gone\r\n                self.currentDisplayPanel = (!Utilities.isUndefinedOrNull(self.recentDocuments) && self.recentDocuments.length > 0) ?\r\n                    self.constants.RECENTS.DISPLAY_PANEL.LIST : self.constants.RECENTS.DISPLAY_PANEL.ERROR;\r\n            });\r\n    });\r\n\r\n    // Open recent document\r\n    function openRecentDocument(doc, clickEvent) {\r\n        $log.trackEvent('PopupOpenRecentDocument', {'application': doc.application});\r\n        Utilities.navigateToUrlWithNewTab(doc.url, Utilities.isUndefinedOrNull(clickEvent) || Utilities.isUndefinedOrNull(clickEvent.ctrlKey) ? true : !clickEvent.ctrlKey);\r\n        window.close();\r\n    }\r\n\r\n    // Gets the most recent document list if signed in and then updates the current list\r\n    this.refreshRecentDocumentsList = function () {\r\n        var deferred = $q.defer();\r\n\r\n        $log.debug('MruController.refreshRecentDocumentsList(): Method start');\r\n\r\n        mruService.getRecentDocumentList().then(function (recentDocumentsList) {\r\n            if (Utilities.isUndefinedOrNull(recentDocumentsList)) {\r\n                // getRecentDocumentsList returned a null array, so set it to empty\r\n                // to clear out the displayed list for the user\r\n                recentDocumentsList = [];\r\n            }\r\n\r\n            // This will be used to store the list returned from the service\r\n            var newRecentDocuments = [];\r\n\r\n            // Keep a separate count from i so we fill the list even if recents has folders\r\n            var listCount = 0;\r\n\r\n            // (re)populate the recentDocuments list\r\n            for (var i = 0; i < recentDocumentsList.length && listCount < self.LIST_LENGTH; i++) {\r\n\r\n                // Skip and warn about any undefined document applications\r\n                if (Utilities.isUndefinedOrNull(recentDocumentsList[i].Application)) {\r\n                    $log.warn(`Undefined document application with document type ${Utilities.getFileExtension(recentDocumentsList[i].FileName)}`);\r\n                    continue;\r\n                }\r\n\r\n                // Ensure the file data from o365 is valid\r\n                if (self.isFileDataValid(recentDocumentsList[i].FileName, recentDocumentsList[i].Application, recentDocumentsList[i].DocumentUrl, recentDocumentsList[i].Timestamp)) {\r\n                    newRecentDocuments.push({\r\n                        appLabel: self.constants.FILE.APPLICATION_LABEL[recentDocumentsList[i].Application.toLowerCase()],\r\n                        application: recentDocumentsList[i].Application,\r\n                        lastAccessed: new Date(recentDocumentsList[i].Timestamp).toLocaleDateString(),\r\n                        imageSource: '../' + self.constants.FILE.APPLICATION_IMAGE_PATH[recentDocumentsList[i].Application.toLowerCase()],\r\n                        name: self.shortenFilename(recentDocumentsList[i].FileName),\r\n                        url: self.createOpenInWebUrl(recentDocumentsList[i].DocumentUrl),\r\n                        id: recentDocumentsList[i].Id\r\n                    });\r\n\r\n                    listCount++;\r\n                }\r\n            }\r\n\r\n            // Only update the list if we found something different\r\n            if (!self.mruListsEqual(self.recentDocuments, newRecentDocuments)) {\r\n                self.recentDocuments = newRecentDocuments;\r\n                self.setRecentDocumentsToStorage(newRecentDocuments);\r\n            }\r\n\r\n            deferred.resolve();\r\n        }, function (error) {\r\n            // rejected promise from mruService.getRecentDocumentList\r\n            deferred.reject(error);\r\n        });\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n    // Do a check if we have any updated files\r\n    this.mruListsEqual = function (oldList, newList) {\r\n\r\n        if (Utilities.isUndefinedOrNull(oldList) || Utilities.isUndefinedOrNull(newList) || oldList.length !== newList.length) {\r\n            return false;\r\n        }\r\n\r\n        for (var i = 0; i < newList.length; i++) {\r\n            if (newList[i].name !== oldList[i].name ||\r\n                newList[i].url !== oldList[i].url ||\r\n                newList[i].lastAccessed !== oldList[i].lastAccessed) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    // Gets the list of documents for the UX from local storage\r\n    this.getRecentDocumentsFromStorage = function () {\r\n        var deferred = $q.defer();\r\n\r\n        storage.get('localRecentDocuments').then(function (result) {\r\n            deferred.resolve(result.localRecentDocuments);\r\n        });\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n    // Puts the documents list for the UX into local storage\r\n    this.setRecentDocumentsToStorage = function (docList) {\r\n        storage.set({\r\n            'localRecentDocuments': docList\r\n        });\r\n    };\r\n\r\n    // Helper function to validate the MRU file data\r\n    this.isFileDataValid = function (name, application, url, lastAccessed) {\r\n\r\n        // Make sure it's a valid application with a label since we use this to get the label and image path\r\n        if (Utilities.isUndefinedOrNull(application) || !self.constants.FILE.APPLICATION_LABEL[application.toLowerCase()]) {\r\n            return false;\r\n        }\r\n\r\n        // Now just make sure the rest of the values are not empty\r\n        return (Utilities.isNotUndefinedOrNull(name) && Utilities.isNotUndefinedOrNull(url) && Utilities.isNotUndefinedOrNull(lastAccessed));\r\n    };\r\n\r\n    // Appends on ?web=1 so the o365 documents open in WAC and are not downloaded\r\n    this.createOpenInWebUrl = function (path) {\r\n        if (self.constants.FILE.SUPPORTED_FILE_TYPES[Utilities.getFileExtension(path)]) {\r\n            return (path + '?web=1');\r\n        }\r\n\r\n        // Return the path if it doesn't and in a known extension. For example, OneNote notebooks\r\n        return path;\r\n    };\r\n\r\n    // Removes file extension (e.g. .docx) if they exist\r\n    this.shortenFilename = function (fileName) {\r\n        var name = fileName.replace(/\\.[^/.]+$/, '');\r\n        return name;\r\n    };\r\n}\r\n","import angular from 'angular';\r\nimport mruService from './mru.service';\r\nimport mruController from './mru.controller';\r\n\r\nexport default angular\r\n    .module('app.mru', [])\r\n    .factory('mruService', ['$q', '$log', '$http', 'userService', mruService])\r\n    .controller('MruController', ['$scope', '$q', '$log', 'storage', 'mruService', mruController])\r\n    .name;\r\n","import angular from 'angular';\r\nimport 'angular-route';\r\nimport '../common/browserHandler';\r\nimport {bindDragAndDrop, bindFileChange, bindFileInputContainerClick, PopupController} from './popup.controller';\r\nimport '../common';\r\n\r\nexport default angular\r\n    .module('app.popup', ['ngRoute'])\r\n    .controller('PopupController', ['$timeout', '$scope', '$q', '$log', '$document', 'storage', 'userService', 'localize', 'notification', PopupController])\r\n    .directive('bindFileChange', bindFileChange)\r\n    .directive('bindDragAndDrop', ['$log', bindDragAndDrop])\r\n    .directive('bindFileInputContainerClick', ['$log', bindFileInputContainerClick])\r\n    .config(['$routeProvider', ($routeProvider) => {\r\n        $routeProvider\r\n            .when('/', {\r\n                templateUrl: './popup/popup.html',\r\n                controller: 'PopupController',\r\n                controllerAs: 'ctrl'\r\n            })\r\n            .otherwise({\r\n                redirectTo: '/'\r\n            });\r\n    }])\r\n    .name;\r\n","import fabric from 'office-ui-fabric-js/dist/js/fabric.min.js';\r\nimport BrowserHandler from '../common/browserHandler';\r\nimport constants from '../common/constants';\r\nimport Utilities from '../common/utilities';\r\n\r\n// Custom directive since Angular does not support on change event binding with input elements of type 'file'\r\nexport function bindFileChange() {\r\n    return {\r\n        require: 'ngModel',\r\n        restrict: 'A',\r\n        link: function (scope, element, attrs, ngModel) {\r\n            element.bind('change', function (event) {\r\n                ngModel.$setViewValue(event.target.files);\r\n            });\r\n        },\r\n    };\r\n}\r\n\r\nexport function bindDragAndDrop($log) {\r\n    return {\r\n        require: 'ngModel',\r\n        restrict: 'A',\r\n        link: function (scope, element, attrs, ngModel) {\r\n            element.bind('dragover', function (event) {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                event.originalEvent.dataTransfer.dropEffect = 'copy';\r\n            });\r\n\r\n            element.bind('drop', function (event) {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                $log.trackEvent('OpenDocument_Local_AppDragAndDrop');\r\n                ngModel.$setViewValue(event.originalEvent.dataTransfer.files);\r\n            });\r\n        },\r\n    };\r\n}\r\n\r\nexport function bindFileInputContainerClick($log) {\r\n    return {\r\n        restrict: 'A',\r\n        link: function (scope, element) {\r\n            element.bind('mousedown keydown keypress', function (event) {\r\n                // Bind with Mousedown and Enter keydown events\r\n                if (\r\n                    event.which === constants.JQUERY.EVENT_ID.MOUSEDOWN.LEFT_BUTTON_CLICK ||\r\n                    event.which === constants.JQUERY.EVENT_ID.KEYPRESS.ENTER\r\n                ) {\r\n                    $log.trackEvent('OpenDocument_Local');\r\n                    event.currentTarget.nextElementSibling.click();\r\n                    event.preventDefault();\r\n                }\r\n            });\r\n        },\r\n    };\r\n}\r\n\r\nexport function PopupController($timeout, $scope, $q, $log, $document, storage, userService, localize, notification) {\r\n    var self = this;\r\n\r\n    self.accountPanelOpened = false;\r\n    self.filesSelected = null;\r\n    self.webRedirectInputChecked = false;\r\n    self.telemetryInputChecked = false;\r\n    self.onLine = true;\r\n    self.username = '';\r\n    self.profilePicture = '';\r\n    self.rtl = Utilities.isRTL();\r\n    self.isChrome = Utilities.isChrome();\r\n    self.useAuthNext = false;\r\n    // Editor specific\r\n    // Indicates that the manifest is turned on\r\n    self.editorFeatureEnabled = Utilities.isEditorEnabled();\r\n\r\n    // Use the blurb that mentions Editor only if this build\r\n    // has editor enabled\r\n    // var message = Utilities.getAppDescription(); // the manifest isn't localized so can't show this\r\n    self.appDescriptionMessage = localize.getLocalizedString(\"AppDescription\");\r\n\r\n    // Exposed Methods\r\n    self.onMenuItemClick = onMenuItemClick;\r\n    self.onSignOutClick = onSignOutClick;\r\n    self.onWelcomeSignInClick = onWelcomeSignInClick;\r\n    self.onProfileClick = onProfileClick;\r\n    self.onSignOutLinkClick = onSignOutLinkClick;\r\n    self.onSignupLinkClick = onSignupLinkClick;\r\n    self.onWebRedirectInputChange = onWebRedirectInputChange;\r\n    self.onTelemetryInputChange = onTelemetryInputChange;\r\n    self.onFileInputChange = onFileInputChange;\r\n    self.openDocument = openDocument;\r\n    self.openOfficeHome = openOfficeHome;\r\n    self.openSupportPage = openSupportPage;\r\n    self.openMyAccountPage = openMyAccountPage;\r\n    self.browseToRecents = browseToRecents;\r\n    self.createDocument = createDocument;\r\n    self.handleTableNavigation = handleTableNavigation;\r\n    self.loadFile = loadFile;\r\n    self.constants = constants;\r\n    self.storage = storage;\r\n    self.userService = userService;\r\n    self.localize = localize;\r\n    self.hasSignedIn = constants.SIGNINSTATUS.UNKNOWN;\r\n\r\n    // Default to using OneDrive as storage\r\n    self.currentViewMode = constants.MENU_VIEWMODE.NONE;\r\n    $scope.userType = constants.USER_TYPE.NONE;\r\n\r\n    self.appLaunchers = [\r\n        [\r\n            {\r\n                id: 'Outlook',\r\n                label: 'OutlookAppName',\r\n                iconClass: 'ms-BrandIcon--icon48 ms-BrandIcon--outlook',\r\n                url: constants.LINKS.APP.OUTLOOK_DEFAULT,\r\n                isBusinessOnly: false,\r\n            },\r\n            {\r\n                id: 'OneDrive',\r\n                label: 'OneDriveAppName',\r\n                iconClass: 'ms-BrandIcon--icon48 ms-BrandIcon--onedrive',\r\n                url: constants.LINKS.APP.ONEDRIVE,\r\n                isBusinessOnly: false,\r\n            },\r\n        ],\r\n        [\r\n            {\r\n                id: 'WordOnline',\r\n                label: 'WordAppName',\r\n                iconClass: 'ms-BrandIcon--icon48 ms-BrandIcon--word',\r\n                url: constants.LINKS.APP.WORD,\r\n                isBusinessOnly: false,\r\n            },\r\n            {\r\n                id: 'ExcelOnline',\r\n                label: 'ExcelAppName',\r\n                iconClass: 'ms-BrandIcon--icon48 ms-BrandIcon--excel',\r\n                url: constants.LINKS.APP.EXCEL,\r\n                isBusinessOnly: false,\r\n            },\r\n        ],\r\n        [\r\n            {\r\n                id: 'PowerPointOnline',\r\n                label: 'PowerPointAppName',\r\n                iconClass: 'ms-BrandIcon--icon48 ms-BrandIcon--powerpoint',\r\n                url: constants.LINKS.APP.POWERPOINT,\r\n                isBusinessOnly: false,\r\n            },\r\n            {\r\n                id: 'OneNoteOnline',\r\n                label: 'OneNoteAppName',\r\n                iconClass: 'ms-BrandIcon--icon48 ms-BrandIcon--onenote',\r\n                url: constants.LINKS.APP.ONENOTE,\r\n                isBusinessOnly: false,\r\n            },\r\n        ],\r\n        [\r\n            {\r\n                id: 'SharePoint',\r\n                label: 'SharePointSiteAppName',\r\n                iconClass: 'ms-BrandIcon--icon48 ms-BrandIcon--sharepoint',\r\n                url: constants.LINKS.APP.SHAREPOINT_DEFAULT,\r\n                isBusinessOnly: true,\r\n            },\r\n            {\r\n                id: 'Teams',\r\n                label: 'TeamsAppName',\r\n                iconClass: 'ms-BrandIcon--icon48 ms-BrandIcon--teams',\r\n                url: constants.LINKS.APP.TEAMS,\r\n                isBusinessOnly: true,\r\n            },\r\n        ],\r\n    ];\r\n\r\n    // Send telemetry asynchronously after DOM content is loaded\r\n    $document.ready(function () {\r\n        $timeout(function () {\r\n            $log.trackEvent('PopupPageLoad');\r\n        });\r\n\r\n        var CheckBoxElements = document.querySelectorAll('.ms-CheckBox');\r\n        for (var j = 0; j < CheckBoxElements.length; j++) {\r\n            new fabric.CheckBox(CheckBoxElements[j]);\r\n        }\r\n    });\r\n\r\n    // Initialize scope variables for view\r\n    function initialize() {\r\n        storage.get(['userType', 'identity']).then(storageResult => {\r\n            var signInStatus = (storageResult && storageResult.identity && storageResult.userType !== constants.USER_TYPE.NONE);\r\n            self.hasSignedIn = signInStatus ? constants.SIGNINSTATUS.SIGNEDIN : constants.SIGNINSTATUS.NONE;\r\n\r\n            // note that we are only checking against SIGNINSTATUS.HASREFRESHTOKEN because getSignInInfo is not supposed to return SIGNINSTATUS.SIGNEDIN since it does not attempt to valid the signin state\r\n            if (self.hasSignedIn > constants.SIGNINSTATUS.NONE) {\r\n                refreshSignInStatus(); // refresh signIn status only if we have signInInfo\r\n            }\r\n\r\n            return self.storage.get('webRedirect_disabled');\r\n        }).then(storageResult => {\r\n            self.webRedirectInputChecked = !(Utilities.isNotUndefinedOrNull(storageResult.webRedirect_disabled) && storageResult.webRedirect_disabled);\r\n\r\n            return $log.getEnabledSetting();\r\n        }).then(enabled => {\r\n            $log.setEnabledSetting(enabled);\r\n            self.telemetryInputChecked = enabled;\r\n\r\n            return userService.useAuthNext();\r\n        }).then(useAuthNext => {\r\n            self.useAuthNext = useAuthNext;\r\n\r\n            return;\r\n        });\r\n    }\r\n\r\n    // Gets the user's profile picture from the user service\r\n    function getUserPhoto() {\r\n        userService.getUserPhoto().then(function (photo) {\r\n            if (photo) {\r\n                self.profilePicture = photo;\r\n            }\r\n        }, function (error) {\r\n            self.profilePicture = '';\r\n            $log.info(`PopupController.getUserPhoto: Profile Picture Error - ${error}`);\r\n        });\r\n    }\r\n\r\n    // Update which menu is displayed\r\n    function onMenuItemClick(viewMode) {\r\n        // If the user clicks on the menu button again, dismiss the menu\r\n        self.currentViewMode = self.currentViewMode === viewMode ? constants.MENU_VIEWMODE.NONE : (self.currentViewMode = viewMode);\r\n    }\r\n\r\n    function refreshSignInStatus() {\r\n        $log.debug('PopupController.refreshSignInStatus(): Method start');\r\n\r\n        self.userService.getUserType().then(async function (userType) {\r\n            $log.debug(`PopupController.getSignInStatus(): hasSignedIn: ${userType}`);\r\n            $log.trackEvent('PopupSignedIn', {'userType': userType});\r\n            $scope.userType = userType;\r\n            self.hasSignedIn = userType === constants.USER_TYPE.NONE ? constants.SIGNINSTATUS.NONE : constants.SIGNINSTATUS.SIGNEDIN;\r\n\r\n            if (self.hasSignedIn !== constants.SIGNINSTATUS.SIGNEDIN) {\r\n                return;\r\n            }\r\n\r\n            var userInfo = await self.userService.waitForUserInfo(userType);\r\n            if (Utilities.isUndefinedOrNull(userInfo)) {\r\n                $log.warn('self.UserService.getUserInfo(): userInfo is undefined or null when hasSignedIn is SIGNINSTATUS.SIGNEDIN');\r\n                return;\r\n            }\r\n\r\n            if (Utilities.isUndefinedOrNull(userInfo.email)) {\r\n                $log.warn('self.UserService.getUserInfo(): userInfo.email is undefined or null when hasSignedIn is SIGNINSTATUS.SIGNEDIN');\r\n                return;\r\n            }\r\n            self.username = userInfo.email;\r\n\r\n            // Get the user's profile picture\r\n            getUserPhoto();\r\n        });\r\n    }\r\n\r\n    //\r\n    // --- Start Account Menu Methods ---\r\n    //\r\n\r\n    // Account menu item Sign-in/Sign-out link - Go back to login page\r\n    // This should only be reachable when signed in though\r\n    function onSignOutClick() {\r\n        self.currentViewMode = constants.MENU_VIEWMODE.NONE;\r\n\r\n        if (self.hasSignedIn === constants.SIGNINSTATUS.SIGNEDIN) {\r\n            onSignOutLinkClick();\r\n        }\r\n    }\r\n\r\n    // Welcome page Sign-in link\r\n    async function onWelcomeSignInClick(userType) {\r\n        $log.trackEvent('PopupSignInLinkClick');\r\n        window.close();\r\n        // eslint-disable-next-line no-async-promise-executor\r\n        return new Promise(async (resolve) => {\r\n\r\n            BrowserHandler.runtime.sendMessage({\r\n                activity: constants.ACTIVITY.AUTHENTICATION.NAME,\r\n                type: userType\r\n            }, result => {\r\n                resolve();\r\n                $log.debug(`onWelcomeSignInClick sendMessage returned ${result}`);\r\n            });\r\n        });\r\n    }\r\n\r\n    // Sign-out link\r\n    function onSignOutLinkClick() {\r\n        $log.trackEvent('PopupSignOutLinkClick');\r\n\r\n        BrowserHandler.runtime.sendMessage({\r\n            activity: constants.ACTIVITY.LOGOUT.NAME,\r\n            type: $scope.userType\r\n        });\r\n\r\n        self.hasSignedIn = constants.SIGNINSTATUS.NONE;\r\n        $scope.userType = constants.USER_TYPE.NONE;\r\n\r\n        // Clear recents from local storage\r\n        storage.remove('localRecentDocuments');\r\n    }\r\n\r\n    // Sign Up link\r\n    function onSignupLinkClick() {\r\n        $log.trackEvent('PopupSignupLinkClick');\r\n        Utilities.navigateToUrlWithNewTab(constants.LINKS.SIGNUP, true);\r\n    }\r\n\r\n    function onTelemetryInputChange() {\r\n        self.telemetryInputChecked = !self.telemetryInputChecked;\r\n        $log.setEnabledSetting(self.telemetryInputChecked);\r\n        $log.trackEvent('PopupTelemetryInputChecked', {enabled: self.telemetryInputChecked});\r\n    }\r\n\r\n    function onWebRedirectInputChange() {\r\n        self.webRedirectInputChecked = !self.webRedirectInputChecked;\r\n        self.storage.set({webRedirect_disabled: !self.webRedirectInputChecked});\r\n        $log.trackEvent('PopupWebRedirectChecked', {enabled: self.webRedirectInputChecked});\r\n    }\r\n\r\n    function onProfileClick() {\r\n        self.accountPanelOpened = !self.accountPanelOpened;\r\n    }\r\n\r\n    // Open document\r\n    async function openDocument() {\r\n        $log.trackEvent('PopupOpenDocument', {'userType': $scope.userType});\r\n        var userInfo = await self.userService.getUserInfo($scope.userType);\r\n        if (Utilities.isUndefinedOrNull(userInfo)) {\r\n            $log.warn('PopupController.openDocument(): invalid userInfo');\r\n            return;\r\n        }\r\n\r\n        if (Utilities.isUndefinedOrNull(userInfo.oneDriveUrl)) {\r\n            $log.warn('PopupController.openDocument(): invalid OneDriveUrl');\r\n            return;\r\n        }\r\n\r\n        Utilities.navigateToUrlWithNewTab(userInfo.oneDriveUrl, true);\r\n    }\r\n\r\n    // Open SharePoint site\r\n    async function openSharePointSite() {\r\n        var userInfo = await self.userService.getUserInfo($scope.userType);\r\n        if (Utilities.isNotUndefinedOrNull(userInfo) && Utilities.isNotUndefinedOrNull(userInfo.sharePointUrl)) {\r\n            Utilities.navigateToUrlWithNewTab(userInfo.sharePointUrl, true);\r\n            return;\r\n        }\r\n\r\n        $log.warn('PopupController.openDocument(): invalid sharePointUrl');\r\n        Utilities.navigateToUrlWithNewTab(constants.LINKS.APP.SHAREPOINT_DEFAULT, true);\r\n    }\r\n\r\n    // Open Office.com\r\n    function openOfficeHome() {\r\n        Utilities.navigateToUrlWithNewTab(constants.LINKS.OFFICE_HOME_URL, true);\r\n    }\r\n\r\n    // Open support page\r\n    function openSupportPage() {\r\n        // Editor specific\r\n        var supportUrl = Utilities.shouldShowEditorMaterial() ? constants.LINKS.SUPPORT_URL_EDITOR : constants.LINKS.SUPPORT_URL;\r\n        Utilities.navigateToUrlWithNewTab(supportUrl, true);\r\n    }\r\n\r\n    // Open myaccount page\r\n    function openMyAccountPage() {\r\n        var url = signedInWithOrgId() ? constants.LINKS.MYACCOUNT_O365_URL : constants.LINKS.MYACCOUNT_MSA_URL;\r\n        Utilities.navigateToUrlWithNewTab(url, true);\r\n    }\r\n\r\n    // Open Recent Document view in browser tab\r\n    async function browseToRecents() {\r\n        $log.trackEvent('PopupBrowseToRecents', {'userType': $scope.userType});\r\n\r\n        // Can browse directly to mru for OneDrive Consumer with query string param\r\n        var userInfo = await self.userService.getUserInfo($scope.userType);\r\n        if (Utilities.isUndefinedOrNull(userInfo)) {\r\n            $log.warn('PopupController.browseToRecents(): invalid userInfo');\r\n            return;\r\n        }\r\n\r\n        if (Utilities.isUndefinedOrNull(userInfo.oneDriveUrl)) {\r\n            $log.warn('PopupController.browseToRecents(): invalid OneDriveUrl');\r\n            return;\r\n        }\r\n\r\n        var url = new URL(userInfo.oneDriveUrl);\r\n        if (!signedInWithOrgId()) {\r\n            var params = new URLSearchParams(url.search);\r\n            params.append('qt', 'mru');\r\n            url.search = params.toString();\r\n        }\r\n        Utilities.navigateToUrlWithNewTab(url.toString(), true);\r\n    }\r\n\r\n    // Create document\r\n    function createDocument(app, clickEvent) {\r\n        $log.trackEvent('PopupCreateDocument', {'application': app.id});\r\n\r\n        var url;\r\n        if (app.id === 'OneDrive') {\r\n            openDocument();\r\n            return;\r\n        } else if (app.id === 'Outlook') {\r\n            url = signedInWithOrgId() ? constants.LINKS.APP.OUTLOOK_O365 : constants.LINKS.APP.OUTLOOK_DEFAULT;\r\n        } else if (app.id === 'SharePoint') {\r\n            openSharePointSite();\r\n            return;\r\n        } else if (typeof app.url === 'function') {\r\n            // Auth code for WAC: 0-default(hrd), 1-MSA, 2-OrgId\r\n            const authType = (self.hasSignedIn !== constants.SIGNINSTATUS.SIGNEDIN) ? '0' : (signedInWithOrgId() ? '2' : '1');\r\n            url = app.url(authType);\r\n        } else {\r\n            url = app.url;\r\n        }\r\n\r\n        Utilities.navigateToUrlWithNewTab(\r\n            url,\r\n            Utilities.isUndefinedOrNull(clickEvent) || Utilities.isUndefinedOrNull(clickEvent.ctrlKey) ? true : !clickEvent.ctrlKey\r\n        );\r\n    }\r\n\r\n    // File picker\r\n    function onFileInputChange() {\r\n        self.loadFile();\r\n        $log.trackEvent('PopupFileInputChange');\r\n    }\r\n\r\n    // Load the input file from html5, upload and view.\r\n    function loadFile() {\r\n        $log.trackEvent('PopupLoadFile', {filesSelectedCount: self.filesSelected.length});\r\n\r\n        // User can multi-select multiple files and drag/drop\r\n        if (self.filesSelected.length > 1) {\r\n            $log.warn(`loadFile called with ${self.filesSelected.length} files selected`);\r\n        }\r\n\r\n        // Check whether user has chosen an unsupported file type\r\n        if (!constants.FILE.SUPPORTED_FILE_TYPES[Utilities.getFileExtension(self.filesSelected[0].name)]) {\r\n            $log.info(\r\n                `PopupController.loadFile(): User attempted to open an unsupported file type of ${Utilities.getFileExtension(\r\n                    self.filesSelected[0].name\r\n                )} extension`\r\n            );\r\n            notification.show(constants.NOTIFICATION.UNSUPPORTEDFILETYPE);\r\n            return;\r\n        }\r\n\r\n        sendFileUploadMessageToBackground(self.filesSelected[0]);\r\n    }\r\n\r\n    // Check if the user is currently signed in with orgId.\r\n    function signedInWithOrgId() {\r\n        return $scope.userType === constants.USER_TYPE.O365;\r\n    }\r\n\r\n    // Sends post message to background for processing\r\n    function sendFileUploadMessageToBackground(file) {\r\n        BrowserHandler.extension.getBackgroundPage().postMessage(file, window.location);\r\n    }\r\n\r\n    function handleTableNavigation(event) {\r\n        var key = event.which || event.keyCode || 0;\r\n        var supportedKey = [\r\n            constants.JQUERY.EVENT_ID.KEYPRESS.ARROWLEFT,\r\n            constants.JQUERY.EVENT_ID.KEYPRESS.ARROWUP,\r\n            constants.JQUERY.EVENT_ID.KEYPRESS.ARROWRIGHT,\r\n            constants.JQUERY.EVENT_ID.KEYPRESS.ARROWDOWN\r\n        ];\r\n        if (!supportedKey.includes(key)) {\r\n            return;\r\n        }\r\n        var currentCell = (event.target).closest('.app_table_cell');\r\n        var currentRow = currentCell.closest('.app_table_row');\r\n        if (!currentCell || !currentRow) {\r\n            return;\r\n        }\r\n        var prevCell = currentCell.previousElementSibling;\r\n        var targetCell;\r\n        switch (key) {\r\n            case constants.JQUERY.EVENT_ID.KEYPRESS.ARROWLEFT:\r\n                {\r\n                    targetCell = currentCell.previousElementSibling;\r\n                    break;\r\n                }\r\n            case constants.JQUERY.EVENT_ID.KEYPRESS.ARROWUP:\r\n                {\r\n                    var prevRow = currentRow.previousElementSibling;\r\n                    if (prevRow) {\r\n                        targetCell = prevRow.querySelector('.app_table_cell');\r\n                    }\r\n                    if (prevCell && targetCell) {\r\n                        targetCell = targetCell.nextElementSibling;\r\n                    }\r\n                    break;\r\n                }\r\n            case constants.JQUERY.EVENT_ID.KEYPRESS.ARROWRIGHT:\r\n                {\r\n                    targetCell = currentCell.nextElementSibling;\r\n                    break;\r\n                }\r\n            case constants.JQUERY.EVENT_ID.KEYPRESS.ARROWDOWN:\r\n                {\r\n                    var nextRow = currentRow.nextElementSibling;\r\n                    if (nextRow) {\r\n                        targetCell = nextRow.querySelector('.app_table_cell');\r\n                    }\r\n                    if (prevCell && targetCell) {\r\n                        targetCell = targetCell.nextElementSibling;\r\n                    }\r\n                    break;\r\n                }\r\n        }\r\n        if (targetCell) {\r\n            event.preventDefault();\r\n            targetCell.querySelector('button').focus();\r\n        }\r\n    }\r\n\r\n    // Initialize\r\n    initialize();\r\n}\r\n","import angular from 'angular';\r\nimport constants from './experimentConstants';\r\nimport experimentService from './experiment.service';\r\nimport sharingController from './sharing/sharing.controller';\r\nimport sharingService from './sharing/sharing.service';\r\nimport SharingAController from './sharing/sharingA/sharingA.controller';\r\n\r\nexport default angular\r\n    .module('app.experimentation', [])\r\n    .constant('experimentConstants', constants)\r\n    .factory('experimentService', ['$http', '$q', '$log', /* 'constants', */ 'experimentConstants', 'userService', experimentService])\r\n    .controller('SharingController', ['experimentService', sharingController])\r\n    .factory('sharingService', ['$http', '$q', '$log', /* 'constants', */ 'userService', sharingService])\r\n    .controller('SharingAController', ['$log', 'sharingService', 'userService', 'localize', SharingAController])\r\n    .name;\r\n","\r\nexport default {\r\n    DEFAULT_CLIENT_ID: '',\r\n    ENABLED: {\r\n        MSA: true,\r\n        O365: false,\r\n        BROWSERS: ['Chrome', 'Edge']\r\n    },\r\n    ENDPOINT: 'http://officeonlineextension-office365.msedge.net/ab',\r\n    ERROR: {\r\n        BAD_USER_TYPE: 'badUserType',\r\n        NO_CLIENT_ID: 'noClientId',\r\n        NO_FEATURES: 'noFeatures'\r\n    },\r\n    EXPERIMENTS: {\r\n        SHARING: {\r\n            ENABLED: {\r\n                MSA: true,\r\n                O365: false,\r\n                BROWSERS: ['Chrome']\r\n            },\r\n            CONTROL: 'sharingControl/sharingControl.html',\r\n            FLIGHTS: {\r\n                'flighttestaacf': 'sharingControl/sharingControl.html',\r\n                'flighttestaa': 'sharingControl/sharingControl.html',\r\n                'SharingUXCF': 'sharingControl/sharingControl.html',\r\n                'SharingUX': 'sharingA/sharingA.html'\r\n            }\r\n        }\r\n    }\r\n};\r\n","/* global Utilities */\r\nimport '../common/utilities';\r\nimport './experimentConstants';\r\nimport constants from '../common/constants';\r\n\r\nexport default function experimentService($http, $q, $log, experimentConstants, userService) {\r\n    // Private variables\r\n    var flights = null;\r\n    var flightsPromise = null;\r\n\r\n    var userTypeMap = {[constants.USER_TYPE.MSA]: 'MSA', [constants.USER_TYPE.O365]: 'O365'};\r\n\r\n    var currentUserType;\r\n\r\n    // Exposed methods\r\n    var service = {\r\n        getFlight: getFlight,\r\n\r\n        // Exposed to call from UTs\r\n        getFlights: getFlights,\r\n        flightingDisabled: flightingDisabled,\r\n        experimentEnabled: experimentEnabled,\r\n    };\r\n\r\n    return service;\r\n\r\n    // Function declarations\r\n\r\n    // Returns the flight assignment for the experiment with the given name\r\n    async function getFlight(expName) {\r\n        var enabled = await experimentEnabled(expName);\r\n        if (!enabled) {\r\n            return experimentConstants.EXPERIMENTS[expName].CONTROL;\r\n        }\r\n\r\n        var flights = await getFlights();\r\n        return flights[expName];\r\n    }\r\n\r\n    // Returns all flight assignments\r\n    async function getFlights() {\r\n        if (Utilities.isNotUndefinedOrNull(flights)) {\r\n            return flights;\r\n        }\r\n\r\n        if (Utilities.isNotUndefinedOrNull(flightsPromise)) {\r\n            await Promise.all([flightsPromise]);\r\n            return flights;\r\n        }\r\n\r\n        await setFlights();\r\n        return flights;\r\n    }\r\n\r\n    // Resolves with true iff the experiment with the given name is enabled\r\n    async function experimentEnabled(expName) {\r\n        try {\r\n            var userType = await userService.getUserType();\r\n            // if all flighting is disabled, the experiment is disabled (global experiment enabled settings override individual experiment enabled settings)\r\n            if (service.flightingDisabled(userType)) {\r\n                return false;\r\n            }\r\n\r\n            return !disabledCheck(userType, expName);\r\n\r\n        } catch (error) {\r\n            $log.error(`experimentService.experimentEnabled error: ${error}`);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // Returns true iff flighting is disabled for the given user type or the current browser\r\n    function flightingDisabled(userType) {\r\n        return disabledCheck(userType);\r\n    }\r\n\r\n    // Sets the private flights variable by getting the user-assigned features from local storage or ExP\r\n    async function setFlights() {\r\n        try {\r\n            var userType = await userService.getUserType();\r\n            currentUserType = userTypeMap[userType];\r\n\r\n            // undefined, null, or wrong userType => default flights\r\n            if (Utilities.isUndefinedOrNull(userType) || userType === constants.USER_TYPE.NONE) {\r\n                throw (experimentConstants.ERROR.BAD_USER_TYPE);\r\n            }\r\n\r\n            // flighting is disabled for the current user => default flights\r\n            if (service.flightingDisabled(userType)) {\r\n                flights = defaultFlights();\r\n                return;\r\n            }\r\n\r\n            var userInfo = await userService.waitForUserInfo(userType);\r\n            // if there are flights in the local userInfo, use those\r\n            if (Utilities.isNotUndefinedOrNull(userInfo) && Utilities.isNotUndefinedOrNull(userInfo.flights)) {\r\n                flights = userInfo.flights;\r\n                return;\r\n            }\r\n\r\n            // get the flight information from the ExP service and save in userInfo\r\n            var clientId = getClientId(userType, userInfo);\r\n            var features = await getFeatures(clientId);\r\n            featuresToFlights(features);\r\n            userInfo.flights = flights;\r\n            userInfo.features = features;\r\n            await userService.saveUserInfo(userType, userInfo);\r\n        } catch (error) {\r\n            // if any error occurs while getting the flight assignments, set the flights to default (all controls) and resolve\r\n            $log.error(`experimentService.setFlights error: ${error}`);\r\n            flights = defaultFlights();\r\n        }\r\n\r\n    }\r\n\r\n    // Returns the clientId from the given userInfo:\r\n    // cid (msa users) or the default specified in experimentConstants\r\n    function getClientId(userType, userInfo) {\r\n        if (Utilities.isUndefinedOrNull(userInfo)) {\r\n            return experimentConstants.DEFAULT_CLIENT_ID;\r\n        }\r\n\r\n        // TODO: does this still do anything. if so is the id the same as the cid?\r\n        var cid = userInfo.cid || userInfo.id;\r\n        if (cid) {\r\n            return cid;\r\n        }\r\n\r\n        return experimentConstants.DEFAULT_CLIENT_ID;\r\n    }\r\n\r\n    // Gets the user features array from the ExP flighting service, passing in the given clientId\r\n    function getFeatures(clientId) {\r\n        var deferral = $q.defer();\r\n        // bad clientId => no ExP features (reject)\r\n        // var promise = new Promise((resolve, reject) => {\r\n        if (Utilities.isUndefinedOrNull(clientId) || clientId === experimentConstants.DEFAULT_CLIENT_ID) {\r\n            $log.error('experimentService.getFeatures: clientId is undefined, null, or empty');\r\n            return deferral.reject(experimentConstants.ERROR.NO_CLIENT_ID);\r\n        }\r\n\r\n        var id = getTruncatedString(stringToHex(clientId));\r\n        var request = {\r\n            method: 'GET',\r\n            url: experimentConstants.ENDPOINT,\r\n            headers: {\r\n                'X-MSEDGE-CLIENTID': id\r\n            }\r\n        };\r\n\r\n        $http(request).then(\r\n            (response) => {\r\n                var result = response.data;\r\n                if (result.Features) {\r\n                    return deferral.resolve(result.Features);\r\n                } else {\r\n                    return deferral.reject(experimentConstants.ERROR.NO_FEATURES);\r\n                }\r\n            },\r\n            () => {\r\n                return deferral.reject(experimentConstants.ERROR.NO_FEATURES);\r\n            });\r\n        return deferral.promise;\r\n    }\r\n\r\n    // Sets the private flights variable to map each experiment name to the markup for the flight that the user has been assigned to for that experiment\r\n    function featuresToFlights(features) {\r\n        flights = {};\r\n        for (var expKey in experimentConstants.EXPERIMENTS) {\r\n            if (experimentConstants.EXPERIMENTS.hasOwnProperty(expKey)) {\r\n                setExperimentFlights(features, expKey);\r\n            }\r\n        }\r\n\r\n        // check for any invalid features from the ExP service\r\n        validateFeatures(features);\r\n    }\r\n\r\n    // Helper function: assigns the given experiment key to the appropriate flight for the experiment\r\n    function setExperimentFlights(features, expKey) {\r\n        var experiment = experimentConstants.EXPERIMENTS[expKey];\r\n        flights[expKey] = experiment.CONTROL;\r\n\r\n        if (!experiment.ENABLED[currentUserType]) {\r\n            return;\r\n        }\r\n\r\n        for (var flightKey in experiment.FLIGHTS) {\r\n            if (experiment.FLIGHTS.hasOwnProperty(flightKey)) {\r\n                if (features.indexOf(flightKey) > -1) {\r\n                    flights[expKey] = experiment.FLIGHTS[flightKey];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Sets the private flights variable to map each experiment name to its control\r\n    // Used in case of any error in getting the actual flight assignments.\r\n    function defaultFlights() {\r\n        var flights = {};\r\n        for (var expKey in experimentConstants.EXPERIMENTS) {\r\n            if (experimentConstants.EXPERIMENTS.hasOwnProperty(expKey)) {\r\n                var experiment = experimentConstants.EXPERIMENTS[expKey];\r\n                flights[expKey] = experiment.CONTROL;\r\n            }\r\n        }\r\n        return flights;\r\n    }\r\n\r\n    // Checks whether any feature in the given features array (obtained from ExP) is invalid, i.e. not part of any experiment feature->flight mapping\r\n    // and logs an error if any invalid features are found\r\n    function validateFeatures(features) {\r\n        var invalid = [];\r\n        for (var i = 0; i < features.length; ++i) {\r\n            var feature = features[i];\r\n            if (isFeatureInvalid(feature)) {\r\n                invalid.push(feature);\r\n            }\r\n        }\r\n\r\n        if (invalid.length > 0) {\r\n            $log.warn(`ExP service returned invalid features: ${JSON.stringify(invalid)}`);\r\n        }\r\n    }\r\n\r\n    // Helper function that returns true iff the given feature is invalid, i.e. is not a key in any experiment FLIGHTS mapping\r\n    function isFeatureInvalid(feature) {\r\n        for (var expKey in experimentConstants.EXPERIMENTS) {\r\n            if (experimentConstants.EXPERIMENTS.hasOwnProperty(expKey)) {\r\n                var experiment = experimentConstants.EXPERIMENTS[expKey];\r\n                if (experiment.FLIGHTS.hasOwnProperty(feature)) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    // Helper function that returns true iff\r\n    //  all flighting is disabled (if given an undefined or invalid expName)\r\n    //  the experiment with the given name is disabled (if given a valid expName)\r\n    function disabledCheck(userType, expName) {\r\n        // no user type => flighting is disabled\r\n        if (userType === constants.USER_TYPE.NONE) {\r\n            return true;\r\n        }\r\n\r\n        // determine whether to check the enabled settings for all experiments or for a specific experiment\r\n        var enabledSettings = experimentConstants.EXPERIMENTS.hasOwnProperty(expName) ? experimentConstants.EXPERIMENTS[expName].ENABLED : experimentConstants.ENABLED;\r\n        var logName = expName ? `experiment ${expName} is` : 'all experiments are';\r\n\r\n        // check whether flighting is disabled for the current browser - if so, flighting is disabled no matter the userType\r\n        var browser = Utilities.getBrowserName().toLowerCase();\r\n        var enabledBrowsers = enabledSettings.BROWSERS.toString().toLowerCase();\r\n        if (enabledBrowsers.indexOf(browser) < 0) {\r\n            $log.info(`experimentService: ${logName} disabled for browser ${browser}. Experiment is only enabled for browsers ${enabledBrowsers}`);\r\n            return true;\r\n        }\r\n\r\n        // valid user type and enabled browser => use the setting for the userType\r\n        var enabledForUser = enabledSettings[userTypeMap[userType]];\r\n        if (!enabledForUser) {\r\n            $log.info(`experimentService: ${logName} disabled for userType ${userType}`);\r\n        }\r\n        return !enabledForUser;\r\n    }\r\n\r\n    // Helper function that returns a hex representation of the given string (ExP expects the clientId to be in hex format)\r\n    // Source: http://stackoverflow.com/questions/21647928/javascript-unicode-string-to-hex\r\n    function stringToHex(string) {\r\n        var hex, i;\r\n        var result = '';\r\n\r\n        for (i = 0; i < string.length; i++) {\r\n            hex = string.charCodeAt(i).toString(16);\r\n            result += ('000' + hex).slice(-4);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    // Helper function used to ensure that the clientId sent to ExP is <= 100 characters (ExP clientId length limit)\r\n    function getTruncatedString(string) {\r\n        return string.length > 100 ? string.substring(0, 100) : string;\r\n    }\r\n}\r\n","export default function SharingController(experimentService) {\r\n    var self = this;\r\n\r\n    // Private properties\r\n    var path = '/experimentation/sharing/';\r\n    var name = 'SHARING';\r\n\r\n    // Exposed properties\r\n    self.flightView = path + 'sharingControl/sharingControl.html';\r\n\r\n    initialize();\r\n\r\n    function initialize() {\r\n        experimentService.getFlight(name).then(function (flight) {\r\n            self.flightView = path + flight;\r\n        });\r\n    }\r\n\r\n}\r\n","import Utilities from '../../common/utilities';\r\nimport '../experimentConstants';\r\nimport constants from '../../common/constants';\r\n\r\n'use strict';\r\n\r\nexport default function sharingService($http, $q, $log, userService) {\r\n    var service = {\r\n        setShareUrl: setShareUrl,\r\n        setFlagFromPermissions: setFlagFromPermissions\r\n    };\r\n\r\n    return service;\r\n\r\n    // Sets the shareUrl of the given document (currently only supported for MSA users)\r\n    function setShareUrl(doc, userType) {\r\n        if (Utilities.isUndefinedOrNull(doc) || Utilities.isUndefinedOrNull(doc.url)) {\r\n            return;\r\n        }\r\n\r\n        doc.shareUrl = '';\r\n\r\n        if (userType === constants.USER_TYPE.MSA) {\r\n            var docUrl = doc.url;\r\n            var shareUrl = docUrl.replace('&page=view', '&page=self');\r\n            if (shareUrl.indexOf('&page=self') < 0) {\r\n                shareUrl += '&page=self';\r\n            }\r\n            shareUrl += '&action=share';\r\n\r\n            doc.shareUrl = shareUrl;\r\n        }\r\n    }\r\n\r\n    // Sets the canBeShared flag on the given document based on whether the user has permission to share it (for MSA users)\r\n    function setFlagFromPermissions(doc, userType) {\r\n\r\n        // no document => do nothing\r\n        if (Utilities.isUndefinedOrNull(doc)) {\r\n            return $q.resolve();\r\n        }\r\n\r\n        // msa user => based on document permissions\r\n        if (userType === constants.USER_TYPE.MSA) {\r\n            var deferred = $q.defer();\r\n            // in case of error in getting document permissions, assume the document can't be shared\r\n            getMSAPermissions(doc).then(\r\n                function (canShare) {\r\n                    doc.canBeShared = canShare;\r\n                    deferred.resolve();\r\n                },\r\n                function (error) {\r\n                    $log.error(`sharingService.setFlagFromPermissions error: ${error}`);\r\n                    doc.canBeShared = false;\r\n                    deferred.resolve();\r\n                });\r\n\r\n            return deferred.promise;\r\n\r\n        } else {\r\n            // non-msa users can't share documents\r\n            doc.canBeShared = false;\r\n            return $q.resolve();\r\n        }\r\n    }\r\n\r\n    // Resolves with true iff the MSA user has permission to share the given document\r\n    function getMSAPermissions(doc) {\r\n        var deferred = $q.defer();\r\n\r\n        // get the cid (needed to find the userId)\r\n        getCID().then(function (cid) {\r\n            if (Utilities.isUndefinedOrNull(cid)) {\r\n                deferred.reject('null cid');\r\n                return;\r\n            }\r\n\r\n            // get the document id that OneDrive uses\r\n            if (Utilities.isUndefinedOrNull(doc.id)) {\r\n                deferred.reject('no document id');\r\n                return;\r\n            }\r\n            var docSplit = doc.id.split('.');\r\n            var docId = docSplit[docSplit.length - 1];\r\n\r\n            // request to OneDrive api to get the permissions on the document\r\n            var request = {\r\n                method: 'GET',\r\n                url: constants.MSACONFIG.ONEDRIVE_ITEMS_URL + docId + '/permissions',\r\n                headers: {\r\n                    'X-UserType': constants.USER_TYPE.MSA\r\n                }\r\n            };\r\n\r\n            // make http request to get document permissions\r\n            $http(request).then(\r\n                function (response) {\r\n                    var canShare = hasWriteAccess(response.data, cid);\r\n                    deferred.resolve(canShare);\r\n                },\r\n                function (response) {\r\n                    deferred.reject(response.statusText);\r\n                });\r\n        });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    // Resolves with the user's cid or null if none exists\r\n    function getCID() {\r\n        var deferred = $q.defer();\r\n\r\n        userService.waitForUserInfo(constants.USER_TYPE.MSA).then(function (userInfo) {\r\n            if (Utilities.isUndefinedOrNull(userInfo)) {\r\n                deferred.resolve(null);\r\n                return;\r\n            }\r\n            deferred.resolve(userInfo.cid);\r\n        });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    // Returns true iff the user with the given userId has write access in the given permissions object\r\n    function hasWriteAccess(permissions, userId) {\r\n        if (Utilities.isUndefinedOrNull(permissions) || Utilities.isUndefinedOrNull(permissions.value)) {\r\n            return true;\r\n        }\r\n\r\n        var canShare = true;\r\n\r\n        // get the shortened id from the userId - this is the id that the OneDrive api uses for certain accounts\r\n        var shortId = userId.substring(1, userId.length);\r\n\r\n        for (var i = 0; i < permissions.value.length; ++i) {\r\n            var permissionObject = permissions.value[i];\r\n            if (Utilities.isUndefinedOrNull(permissionObject.grantedTo)) {\r\n                continue;\r\n            }\r\n            var grantedToUser = permissionObject.grantedTo.user;\r\n            if (grantedToUser.id === userId || grantedToUser.id === shortId) {\r\n                var roles = permissionObject.roles;\r\n                canShare = roles.toString().toLowerCase().indexOf('write') > -1;\r\n            }\r\n        }\r\n\r\n        return canShare;\r\n    }\r\n}\r\n","import Utilities from '../../../common/utilities';\r\nimport '../../experimentConstants';\r\n\r\n'use strict';\r\n\r\nexport default function SharingAController($log, sharingService, userService, localize) {\r\n    var self = this;\r\n\r\n    // Exposed properties\r\n    self.shareDoc = null;\r\n    self.isChrome = Utilities.isChrome();\r\n    self.localize = localize;\r\n\r\n    // Exposed methods\r\n    self.init = init;\r\n    self.shareDocument = shareDocument;\r\n\r\n    // Function declarations\r\n\r\n    function init(doc) {\r\n        self.shareDoc = doc;\r\n        userService.getUserType().then(function (userType) {\r\n            sharingService.setShareUrl(self.shareDoc, userType);\r\n            sharingService.setFlagFromPermissions(self.shareDoc, userType);\r\n        });\r\n    }\r\n\r\n    function shareDocument(clickEvent) {\r\n        $log.trackEvent('ShareRecentDocument', {'application': self.shareDoc.application});\r\n        var openActive = Utilities.isUndefinedOrNull(clickEvent) || Utilities.isUndefinedOrNull(clickEvent.ctrlKey) ? true : !clickEvent.ctrlKey;\r\n        Utilities.navigateToUrlWithNewTab(self.shareDoc.shareUrl, openActive);\r\n        window.close();\r\n    }\r\n}\r\n","import angular from 'angular';\r\nimport 'angular-aria';\r\nimport 'angular-animate';\r\nimport './common';\r\nimport './user';\r\nimport './mru';\r\nimport './diagnostics';\r\nimport './popup';\r\nimport './experimentation';\r\nimport 'office-ui-fabric-core/dist/css/fabric.min.css';\r\nimport 'office-ui-fabric-js/dist/css/fabric.components.min.css';\r\nimport './css/styles.css';\r\n\r\nexport default angular\r\n    .module('app', ['localization', 'ngAria', 'app.common', 'app.diagnostics', 'app.experimentation', 'app.user', 'app.mru', 'app.popup'])\r\n    .config(['$ariaProvider', '$compileProvider', '$httpProvider', '$provide', function ($ariaProvider, $compileProvider, $routeProvider, $httpProvider, $provide) {\r\n\r\n        'use strict';\r\n\r\n        // Configure Angular accessibility; opt out of tabindex handling\r\n        $ariaProvider.config({\r\n            tabindex: false\r\n        });\r\n\r\n        // Override the default regular expression that is used for whitelisting of safe urls during img[src] sanitization\r\n        $compileProvider.imgSrcSanitizationWhitelist(/^\\s*(https?|data|chrome-extension|ms-browser-extension):/);\r\n    }])\r\n    .name;\r\n","import constants from './constants';\r\nimport Utilities from './utilities';\r\nimport 'angular';\r\n\r\nexport default httpInterceptor;\r\n\r\nfunction httpInterceptor($q, $log, $timeout, $injector) {\r\n    var retries = 0;\r\n    return {\r\n        request: function (config) {\r\n            if (Utilities.isUndefinedOrNull(config.timeout)) {\r\n                config.timeout = constants.TIMEOUT.DEFAULT_REQUEST;\r\n            }\r\n            return config;\r\n        },\r\n        responseError: function (response) {\r\n            if (response) {\r\n                switch (response.status) {\r\n                    case 0:\r\n                        $log.debug(`httpErrorResponseInterceptor - Request cancelled - ${response.config.url}`);\r\n                        break;\r\n                    case 401:\r\n                        $log.info(`httpErrorResponseInterceptor - ${response.status} - ${response.config.url} - ${JSON.stringify(response.data)}`);\r\n                        break;\r\n                    case 400:\r\n                        // Error of invalid AADService. Log the info trace.\r\n                        if (\r\n                            Utilities.isNotUndefinedOrNull(response.data) &&\r\n                            Utilities.isNotUndefinedOrNull(response.data.error_codes) &&\r\n                            response.data.error_codes[0] === 50001\r\n                        ) {\r\n                            $log.info(`httpErrorResponseInterceptor -  Invalid AADSerivce - ${response.status} - ${JSON.stringify(response.data)}`);\r\n                            break;\r\n                        }\r\n\r\n                        // Interaction required. Retry the request with the same resource for 3 times.\r\n                        // https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-protocols-oauth-code\r\n                        if (\r\n                            Utilities.isNotUndefinedOrNull(response.data) &&\r\n                            Utilities.isNotUndefinedOrNull(response.data.error_codes) &&\r\n                            response.data.error_codes[0] === 50079\r\n                        ) {\r\n                            $log.info(`httpErrorResponseInterceptor -  Interaction required - ${response.status} - ${JSON.stringify(response.data)}`);\r\n                            if (retries < constants.ERROR_RETRIES.HTTP_REQUEST) {\r\n                                retries++;\r\n                                return $timeout(function () {\r\n                                    var $http = $injector.get('$http');\r\n                                    return $http(response.config);\r\n                                }, constants.TIMEOUT.USER_INFO_LOOKUP);\r\n                            }\r\n\r\n                            retries = 0;\r\n                        }\r\n                        break;\r\n                    case 404:\r\n                        // don't throw exceptions when graph returns something not found\r\n                        if (response.config.url.startsWith('https://graph.microsoft.com/v1.0/me/drive')) {\r\n                            return $q.resolve(response);\r\n                        }\r\n                    // eslint-disable-next-line no-fallthrough\r\n                    default:\r\n                        $log.error(`httpErrorResponseInterceptor - ${response.status} - ${response.config.url} - ${JSON.stringify(response.data)}`);\r\n                }\r\n            }\r\n\r\n            return $q.reject(response);\r\n        },\r\n    };\r\n}\r\n","import BrowserHandler from './browserHandler';\r\nimport Utilities from '../common/utilities';\r\nimport {mapStackTrace} from 'sourcemapped-stacktrace';\r\n\r\nexport default function logDecorator($delegate, telemetry) {\r\n    // App Insights custom property values have a max length of 8192\r\n    // Limit to 8000 to stay under the App Insights limit\r\n    function getTruncatedString(string) {\r\n        return string.length > 8000 ? string.substring(0, 8000) : string;\r\n    }\r\n\r\n    // Wrapper functions for telemetry in order to handle any errors from the telemetry service //\r\n\r\n    // Gets the enabled setting from storage\r\n    function getEnabledSetting() {\r\n        return telemetry.getEnabledSetting();\r\n    }\r\n\r\n    // Sets the enabled setting\r\n    function setEnabledSetting(enabled) {\r\n        try {\r\n            telemetry.setEnabledSetting(enabled);\r\n        } catch (error) {\r\n            $delegate.error(`setEnabledSetting error: ${error}`);\r\n        }\r\n    }\r\n\r\n    // Tracks a custom event\r\n    function trackEvent(eventName, properties, measurements) {\r\n        try {\r\n            telemetry.trackEvent(eventName, properties, measurements);\r\n        } catch (error) {\r\n            $delegate.error(`trackEvent error with eventName ${eventName}: ${error}`);\r\n        }\r\n    }\r\n\r\n    // Tracks a custom trace (logging/diagnostics info)\r\n    function trackTrace(message, properties) {\r\n        try {\r\n            telemetry.trackTrace(message, properties);\r\n        } catch (error) {\r\n            // empty - if trackTrace fails, then error, info, warn, and debug statements can't be logged\r\n        }\r\n    }\r\n\r\n    function trimExtensionOrigin(url) {\r\n        try {\r\n            const extensionOrigin = (new URL(location.href)).origin + '/';\r\n            url = url.toString().replace(extensionOrigin, '');\r\n        }\r\n        // eslint-disable-next-line no-empty\r\n        catch {}\r\n\r\n        return url;\r\n    }\r\n\r\n    // Sends the log in a message where the background script will handle it and log\r\n    // the message to the console. Only useful in cases like the popup where an event\r\n    // may get logged before you can open the debugger window\r\n    function logToBackground(message, severity, stack, filename, source) {\r\n        if (Utilities.isBackgroundContext()) {\r\n            try {\r\n                const now = new Date();\r\n                var timeStamp = now.toLocaleString(undefined, {month: 'numeric', day: 'numeric', hour: \"numeric\", minute: \"numeric\", second: \"numeric\"});\r\n                var log = `[${timeStamp}] (${trimExtensionOrigin(source)}) ${filename ? filename + ' ' : ''} ${message}`;\r\n                console[severity.toLowerCase()](log);\r\n            }\r\n            // eslint-disable-next-line no-empty\r\n            catch {}\r\n            return;\r\n        }\r\n\r\n        BrowserHandler.runtime.sendMessage({\r\n            activity: 'log',\r\n            severity: severity,\r\n            log: message,\r\n            filename: filename,\r\n            stack: stack\r\n        });\r\n    }\r\n\r\n    function messageString(message) {\r\n        if (typeof message === 'string') {\r\n            return message;\r\n        }\r\n        return JSON.stringify(message);\r\n    }\r\n\r\n    // Returns a new logging function (error, info, etc.) that extends the original logging function\r\n    var prepareLog = function (originalFunction, severityLevel) {\r\n        return function () {\r\n            var args = [].slice.call(arguments);\r\n            var logParams = args[0];\r\n            var fullStack = undefined;\r\n\r\n            if (Utilities.isExtensionInDevelopmentMode()) {\r\n                fullStack = Error().stack;\r\n            }\r\n\r\n            var message = getTruncatedString(messageString(logParams.message ? logParams.message : logParams));\r\n\r\n            new Promise((resolve) => {\r\n                if (logParams.stack) {\r\n                    resolve(typeof logParams.stack === 'string' ? getTruncatedString(logParams.stack).split('\\n') : logParams.stack);\r\n                } else if (fullStack) {\r\n                    mapStackTrace(fullStack, mappedStack => {\r\n                        // remove this file from the top of the stack\r\n                        while (mappedStack[0].match('logDecorator.js')) {\r\n                            mappedStack.shift();\r\n                        }\r\n\r\n                        resolve(mappedStack);\r\n                    }, {/*cacheGlobally: true*/});\r\n                } else {\r\n                    resolve([]);\r\n                }\r\n            }).then((stack) => {\r\n                var filename = '';\r\n                var source = logParams.source || location;\r\n                if (logParams.filename) {\r\n                    filename = logParams.filename;\r\n                } else {\r\n                    for (var caller of stack) {\r\n                        var matched = caller.match(/\\b[\\w.]+\\b:\\d+/g);\r\n                        if (!matched) {\r\n                            continue;\r\n                        }\r\n                        filename = matched.pop();\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                logToBackground(message, severityLevel, stack, filename, source);\r\n                var timeStamp = new Date().toLocaleString(undefined, {month: 'numeric', day: 'numeric', hour: \"numeric\", minute: \"numeric\", second: \"numeric\"});\r\n\r\n                args[0] = `[${timeStamp}] ${filename ? filename + ' ' : ''}${severityLevel}: ${message}`;\r\n\r\n                // Only output logs in development mode\r\n                if (Utilities.isExtensionInDevelopmentMode()) {\r\n                    originalFunction.apply(null, args);\r\n                }\r\n\r\n                // Do not track debug trace messages to telemetry\r\n                if (severityLevel === 'DEBUG') {\r\n                    return;\r\n                }\r\n\r\n                trackTrace(severityLevel, {\r\n                    message: message,\r\n                    stack: severityLevel === 'ERROR' ? stack : '',\r\n                });\r\n            });\r\n        };\r\n    };\r\n\r\n    // Extend the original $delegate logging functions\r\n    $delegate.debug = prepareLog($delegate.debug, 'DEBUG');\r\n    $delegate.info = prepareLog($delegate.info, 'INFO');\r\n    $delegate.warn = prepareLog($delegate.warn, 'WARN');\r\n    $delegate.error = prepareLog($delegate.error, 'ERROR');\r\n\r\n    // Attach telemetry functions to the $delegate so that $log can replace the telemetry service throughout the application\r\n    $delegate.getEnabledSetting = getEnabledSetting;\r\n    $delegate.setEnabledSetting = setEnabledSetting;\r\n    $delegate.trackEvent = trackEvent;\r\n    $delegate.trackTrace = trackTrace;\r\n\r\n    return $delegate;\r\n}\r\n","import BrowserHandler from './browserHandler';\r\n\r\nwindow.dumpStorage = () => {\r\n    if (!window.chrome) {\r\n        return;\r\n    }\r\n\r\n    window.chrome.storage.local.get(null, result => {\r\n        console.log(`result '${JSON.stringify(result, '\\t')}'`);\r\n    });\r\n};\r\n\r\nexport default function ($q, $log) {\r\n    return {\r\n        get: function (keys) {\r\n            var deferred = $q.defer();\r\n\r\n            BrowserHandler.storage.local.get(keys, function (result) {\r\n                $log.debug(`storage: get '${JSON.stringify(keys)}', result '${JSON.stringify(result)}'`);\r\n                deferred.resolve(result);\r\n            });\r\n\r\n            return deferred.promise;\r\n        },\r\n\r\n        set: function (items) {\r\n            $log.debug(`storage: set items '${JSON.stringify(items)}'`);\r\n            BrowserHandler.storage.local.set(items);\r\n        },\r\n\r\n        remove: function (keys) {\r\n            var deferred = $q.defer();\r\n\r\n            BrowserHandler.storage.local.remove(keys, function (result) {\r\n                $log.debug(`storage: remove '${JSON.stringify(keys)}', result '${JSON.stringify(result)}'`);\r\n                deferred.resolve(result);\r\n            });\r\n\r\n            return deferred.promise;\r\n        },\r\n\r\n        clear: function () {\r\n            var deferred = $q.defer();\r\n\r\n            BrowserHandler.storage.local.clear(function (result) {\r\n                $log.debug(`storage: clear result '${JSON.stringify(result)}'`);\r\n                deferred.resolve(result);\r\n            });\r\n\r\n            return deferred.promise;\r\n        },\r\n    };\r\n}\r\n","import angular from 'angular';\r\nimport './browserHandler'; /* eslint-disable-line sort-imports */\r\nimport 'angularjs-localizationservice.1.0.1/localize';\r\nimport httpInterceptor from './httpInterceptor';\r\nimport logDecorator from './logDecorator';\r\nimport notification from './notification.service';\r\nimport storage from './storage.service';\r\n\r\nvar commonModule = angular\r\n    .module('app.common', [])\r\n    .config(['$httpProvider', '$provide', appCommon])\r\n    .factory('storage', ['$q', '$log', storage])\r\n    .factory('notification', ['$log', 'localize', notification])\r\n    .factory('httpInterceptor', ['$q', '$log', '$timeout', '$injector', httpInterceptor]);\r\n\r\nexport default commonModule.name;\r\n\r\nfunction appCommon($httpProvider, $provide) {\r\n    $provide.decorator('$log', ['$delegate', 'telemetry', logDecorator]);\r\n\r\n    // Register http interceptors\r\n    $httpProvider.interceptors.push('httpInterceptor');\r\n}\r\n","import Utilities from './utilities';\r\nimport BrowserHandler from './browserHandler';\r\nimport constants from './constants';\r\n\r\nexport default function ($log, localize) {\r\n    return {\r\n        show: function (notification) {\r\n            // Send message to background instance to handle show notification.\r\n            if (!Utilities.isBackgroundContext()) {\r\n                BrowserHandler.runtime.sendMessage({\r\n                    activity: constants.ACTIVITY.NOTIFICATION.NAME,\r\n                    notification: notification,\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            var buttons;\r\n            if (notification.buttons !== undefined && notification.buttons !== null) {\r\n                buttons = [];\r\n                for (var index = 0; index < notification.buttons.length; ++index) {\r\n                    buttons[index] = {};\r\n                    buttons[index].title = localize.getLocalizedString(notification.buttons[index].title);\r\n                    buttons[index].iconUrl = notification.buttons[index].iconUrl;\r\n                }\r\n            }\r\n\r\n            BrowserHandler.notifications.clear(notification.id, function (wasCleared) {\r\n                BrowserHandler.notifications.create(\r\n                    notification.id,\r\n                    {\r\n                        iconUrl: '../assets/icon.png',\r\n                        imageUrl: notification.imageUrl,\r\n                        message: localize.getLocalizedString(notification.message),\r\n                        priority: notification.priority,\r\n                        progress: notification.progress,\r\n                        title: '',\r\n                        type: notification.type,\r\n                        buttons: buttons,\r\n                    },\r\n                    function (notificationId) {\r\n                        if (notificationId === undefined || notificationId === null) {\r\n                            $log.error('CreateNotificationError');\r\n                        }\r\n                    }\r\n                );\r\n            });\r\n        },\r\n    };\r\n}\r\n","﻿/* global BrowserHandler angular chrome browser */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    /*\r\n     * An AngularJS Localization Service\r\n     *\r\n     * Written by Jim Lavin\r\n     * http://codingsmackdown.tv\r\n     *\r\n     * Modified to integrate with chrome.i18n infrastructure\r\n     */\r\n    var BrowserHandler = window.BrowserHandler;\r\n\r\n    if (!BrowserHandler) {\r\n        BrowserHandler = chrome || browser;\r\n    }\r\n\r\n    angular\r\n        .module('localization', [])\r\n        // localization service responsible for retrieving resource files from chrome.i18n\r\n        .factory('localize', ['$filter', function ($filter) {\r\n            var localize = {\r\n                // checks the dictionary for a localized resource string\r\n                getLocalizedString: function (value) {\r\n                    // default the result to an empty string\r\n                    var result = '';\r\n\r\n                    // pull localized resource using Chrome API\r\n                    result = BrowserHandler.i18n.getMessage(value);\r\n\r\n                    // return the value to the call\r\n                    return result;\r\n                }\r\n            };\r\n\r\n            // return the local instance when called\r\n            return localize;\r\n        }])\r\n\r\n        // simple translation filter\r\n        // usage {{ TOKEN | i18n }}\r\n        .filter('i18n', ['localize', function (localize) {\r\n            return function (input) {\r\n                return localize.getLocalizedString(input);\r\n            };\r\n        }])\r\n\r\n        // translation directive that can handle dynamic strings\r\n        // updates the text value of the attached element\r\n        // usage <span data-i18n=\"TOKEN\" ></span>\r\n        // or\r\n        // <span data-i18n=\"TOKEN|VALUE1|VALUE2\" ></span>\r\n        .directive('i18n', ['localize', function (localize) {\r\n            var i18nDirective = {\r\n                restrict: \"EAC\",\r\n                updateText: function (elm, token) {\r\n                    var values = token.split('|');\r\n                    if (values.length <= 1) return;\r\n\r\n                    // construct the tag to insert into the element\r\n                    var tag = localize.getLocalizedString(values[0]);\r\n                    if (!tag) return;\r\n\r\n                    // update the element\r\n                    for (var index = 1; index < values.length; index++) {\r\n                        var target = '{' + (index - 1) + '}';\r\n                        tag = tag.replace(target, values[index]);\r\n                    }\r\n\r\n                    // insert the text into the element\r\n                    elm.text(tag);\r\n                },\r\n\r\n                link: function (scope, elm, attrs) {\r\n                    attrs.$observe('i18n', function (value) {\r\n                        i18nDirective.updateText(elm, attrs.i18n);\r\n                    });\r\n                }\r\n            };\r\n\r\n            return i18nDirective;\r\n        }])\r\n        // translation directive that can handle dynamic strings\r\n        // updates the attribute value of the attached element\r\n        // usage <span data-i18n-attr=\"TOKEN|ATTRIBUTE\" ></span>\r\n        // or\r\n        // <span data-i18n-attr=\"TOKEN|ATTRIBUTE|VALUE1|VALUE2\" ></span>\r\n        .directive('i18nAttr', ['localize', function (localize) {\r\n            var i18NAttrDirective = {\r\n                restrict: \"EAC\",\r\n                updateText: function (elm, token) {\r\n                    var values = token.split('|');\r\n                    if (values.length < 2) return;\r\n\r\n                    // construct the tag to insert into the element\r\n                    var tag = localize.getLocalizedString(values[0]);\r\n                    if (!tag) return;\r\n\r\n                    for (var index = 2; index < values.length; index++) {\r\n                        var target = '{' + (index - 2) + '}';\r\n                        tag = tag.replace(target, values[index]);\r\n                    }\r\n\r\n                    // insert the text into the element\r\n                    elm.attr(values[1], tag);\r\n                },\r\n\r\n                link: function (scope, elm, attrs) {\r\n                    attrs.$observe('i18nAttr', function (value) {\r\n                        i18NAttrDirective.updateText(elm, value);\r\n                    });\r\n                }\r\n            };\r\n\r\n            return i18NAttrDirective;\r\n        }]);\r\n})();\r\n"],"sourceRoot":""}